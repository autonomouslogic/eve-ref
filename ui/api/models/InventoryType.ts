/**
 * EVE Ref Reference Data for EVE Online
 * This spec should be considered unstable and subject to change at any time.
 *
 * OpenAPI spec version: dev
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { DogmaTypeAttribute } from '../models/DogmaTypeAttribute';
import { DogmaTypeEffect } from '../models/DogmaTypeEffect';
import { InventoryTypeTraits } from '../models/InventoryTypeTraits';
import { HttpFile } from '../http/http';

/**
* An inventory type
*/
export class InventoryType {
    'base_price'?: number;
    'capacity'?: number;
    /**
    * The key is the language code.
    */
    'description'?: { [key: string]: string; };
    /**
    * A map of dogma attributes. The key is the attribute ID
    */
    'dogma_attributes'?: { [key: string]: DogmaTypeAttribute; };
    /**
    * A map of dogma attributes. The key is the attribute ID
    */
    'dogma_effects'?: { [key: string]: DogmaTypeEffect; };
    'faction_id'?: number;
    'graphic_id'?: number;
    'group_id'?: number;
    'icon_id'?: number;
    'market_group_id'?: number;
    'mass'?: number;
    'masteries'?: { [key: string]: Array<number>; };
    'meta_group_id'?: number;
    /**
    * The key is the language code.
    */
    'name'?: { [key: string]: string; };
    'packaged_volume'?: number;
    'portion_size'?: number;
    'published'?: boolean;
    'race_id'?: number;
    'radius'?: number;
    'sof_faction_name'?: string;
    'sof_material_set_id'?: number;
    'sound_id'?: number;
    'traits'?: InventoryTypeTraits;
    'type_id'?: number;
    'variation_parent_type_id'?: number;
    'volume'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "base_price",
            "baseName": "base_price",
            "type": "number",
            "format": ""
        },
        {
            "name": "capacity",
            "baseName": "capacity",
            "type": "number",
            "format": "double"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "dogma_attributes",
            "baseName": "dogma_attributes",
            "type": "{ [key: string]: DogmaTypeAttribute; }",
            "format": ""
        },
        {
            "name": "dogma_effects",
            "baseName": "dogma_effects",
            "type": "{ [key: string]: DogmaTypeEffect; }",
            "format": ""
        },
        {
            "name": "faction_id",
            "baseName": "faction_id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "graphic_id",
            "baseName": "graphic_id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "group_id",
            "baseName": "group_id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "icon_id",
            "baseName": "icon_id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "market_group_id",
            "baseName": "market_group_id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "mass",
            "baseName": "mass",
            "type": "number",
            "format": ""
        },
        {
            "name": "masteries",
            "baseName": "masteries",
            "type": "{ [key: string]: Array<number>; }",
            "format": "int32"
        },
        {
            "name": "meta_group_id",
            "baseName": "meta_group_id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "packaged_volume",
            "baseName": "packaged_volume",
            "type": "number",
            "format": "double"
        },
        {
            "name": "portion_size",
            "baseName": "portion_size",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "published",
            "baseName": "published",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "race_id",
            "baseName": "race_id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "radius",
            "baseName": "radius",
            "type": "number",
            "format": "double"
        },
        {
            "name": "sof_faction_name",
            "baseName": "sof_faction_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "sof_material_set_id",
            "baseName": "sof_material_set_id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "sound_id",
            "baseName": "sound_id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "traits",
            "baseName": "traits",
            "type": "InventoryTypeTraits",
            "format": ""
        },
        {
            "name": "type_id",
            "baseName": "type_id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "variation_parent_type_id",
            "baseName": "variation_parent_type_id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "volume",
            "baseName": "volume",
            "type": "number",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return InventoryType.attributeTypeMap;
    }

    public constructor() {
    }
}

