/**
 * EVE Ref Reference Data for EVE Online
 * This spec should be considered unstable and subject to change at any time.
 *
 * OpenAPI spec version: dev
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class DogmaAttribute {
    'attribute_id'?: number;
    'category_id'?: number;
    'charge_recharge_time_id'?: number;
    'data_type'?: number;
    'default_value'?: number;
    'description'?: { [key: string]: string; };
    'display_name'?: { [key: string]: string; };
    'display_when_zero'?: boolean;
    'high_is_good'?: boolean;
    'icon_id'?: number;
    'max_attribute_id'?: number;
    'name'?: string;
    'published'?: boolean;
    'stackable'?: boolean;
    'tooltip_description_id'?: { [key: string]: string; };
    'tooltip_title_id'?: { [key: string]: string; };
    'unit_id'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "attribute_id",
            "baseName": "attribute_id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "category_id",
            "baseName": "category_id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "charge_recharge_time_id",
            "baseName": "charge_recharge_time_id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "data_type",
            "baseName": "data_type",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "default_value",
            "baseName": "default_value",
            "type": "number",
            "format": "double"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "display_name",
            "baseName": "display_name",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "display_when_zero",
            "baseName": "display_when_zero",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "high_is_good",
            "baseName": "high_is_good",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "icon_id",
            "baseName": "icon_id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "max_attribute_id",
            "baseName": "max_attribute_id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "published",
            "baseName": "published",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "stackable",
            "baseName": "stackable",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "tooltip_description_id",
            "baseName": "tooltip_description_id",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "tooltip_title_id",
            "baseName": "tooltip_title_id",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "unit_id",
            "baseName": "unit_id",
            "type": "number",
            "format": "int32"
        }    ];

    static getAttributeTypeMap() {
        return DogmaAttribute.attributeTypeMap;
    }

    public constructor() {
    }
}

