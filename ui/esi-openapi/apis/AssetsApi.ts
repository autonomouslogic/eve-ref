/* tslint:disable */
/* eslint-disable */
/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.25
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  BadRequest,
  ErrorLimited,
  Forbidden,
  GatewayTimeout,
  GetCharactersCharacterIdAssets200Ok,
  GetCharactersCharacterIdAssetsNotFound,
  GetCorporationsCorporationIdAssets200Ok,
  InternalServerError,
  PostCharactersCharacterIdAssetsLocations200Ok,
  PostCharactersCharacterIdAssetsNames200Ok,
  PostCorporationsCorporationIdAssetsLocations200Ok,
  PostCorporationsCorporationIdAssetsLocationsNotFound,
  PostCorporationsCorporationIdAssetsNames200Ok,
  PostCorporationsCorporationIdAssetsNamesNotFound,
  ServiceUnavailable,
  Unauthorized,
} from '../models';
import {
    BadRequestFromJSON,
    BadRequestToJSON,
    ErrorLimitedFromJSON,
    ErrorLimitedToJSON,
    ForbiddenFromJSON,
    ForbiddenToJSON,
    GatewayTimeoutFromJSON,
    GatewayTimeoutToJSON,
    GetCharactersCharacterIdAssets200OkFromJSON,
    GetCharactersCharacterIdAssets200OkToJSON,
    GetCharactersCharacterIdAssetsNotFoundFromJSON,
    GetCharactersCharacterIdAssetsNotFoundToJSON,
    GetCorporationsCorporationIdAssets200OkFromJSON,
    GetCorporationsCorporationIdAssets200OkToJSON,
    InternalServerErrorFromJSON,
    InternalServerErrorToJSON,
    PostCharactersCharacterIdAssetsLocations200OkFromJSON,
    PostCharactersCharacterIdAssetsLocations200OkToJSON,
    PostCharactersCharacterIdAssetsNames200OkFromJSON,
    PostCharactersCharacterIdAssetsNames200OkToJSON,
    PostCorporationsCorporationIdAssetsLocations200OkFromJSON,
    PostCorporationsCorporationIdAssetsLocations200OkToJSON,
    PostCorporationsCorporationIdAssetsLocationsNotFoundFromJSON,
    PostCorporationsCorporationIdAssetsLocationsNotFoundToJSON,
    PostCorporationsCorporationIdAssetsNames200OkFromJSON,
    PostCorporationsCorporationIdAssetsNames200OkToJSON,
    PostCorporationsCorporationIdAssetsNamesNotFoundFromJSON,
    PostCorporationsCorporationIdAssetsNamesNotFoundToJSON,
    ServiceUnavailableFromJSON,
    ServiceUnavailableToJSON,
    UnauthorizedFromJSON,
    UnauthorizedToJSON,
} from '../models';

export interface GetCharactersCharacterIdAssetsRequest {
    characterId: number;
    datasource?: GetCharactersCharacterIdAssetsDatasourceEnum;
    ifNoneMatch?: string;
    page?: number;
    token?: string;
}

export interface GetCorporationsCorporationIdAssetsRequest {
    corporationId: number;
    datasource?: GetCorporationsCorporationIdAssetsDatasourceEnum;
    ifNoneMatch?: string;
    page?: number;
    token?: string;
}

export interface PostCharactersCharacterIdAssetsLocationsRequest {
    characterId: number;
    itemIds: Set<number>;
    datasource?: PostCharactersCharacterIdAssetsLocationsDatasourceEnum;
    token?: string;
}

export interface PostCharactersCharacterIdAssetsNamesRequest {
    characterId: number;
    itemIds: Set<number>;
    datasource?: PostCharactersCharacterIdAssetsNamesDatasourceEnum;
    token?: string;
}

export interface PostCorporationsCorporationIdAssetsLocationsRequest {
    corporationId: number;
    itemIds: Set<number>;
    datasource?: PostCorporationsCorporationIdAssetsLocationsDatasourceEnum;
    token?: string;
}

export interface PostCorporationsCorporationIdAssetsNamesRequest {
    corporationId: number;
    itemIds: Set<number>;
    datasource?: PostCorporationsCorporationIdAssetsNamesDatasourceEnum;
    token?: string;
}

/**
 * 
 */
export class AssetsApi extends runtime.BaseAPI {

    /**
     * Return a list of the characters assets  --- Alternate route: `/dev/characters/{character_id}/assets/`  Alternate route: `/v5/characters/{character_id}/assets/`  --- This route is cached for up to 3600 seconds
     * Get character assets
     */
    async getCharactersCharacterIdAssetsRaw(requestParameters: GetCharactersCharacterIdAssetsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<GetCharactersCharacterIdAssets200Ok>>> {
        if (requestParameters.characterId === null || requestParameters.characterId === undefined) {
            throw new runtime.RequiredError('characterId','Required parameter requestParameters.characterId was null or undefined when calling getCharactersCharacterIdAssets.');
        }

        const queryParameters: any = {};

        if (requestParameters.datasource !== undefined) {
            queryParameters['datasource'] = requestParameters.datasource;
        }

        if (requestParameters.page !== undefined) {
            queryParameters['page'] = requestParameters.page;
        }

        if (requestParameters.token !== undefined) {
            queryParameters['token'] = requestParameters.token;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.ifNoneMatch !== undefined && requestParameters.ifNoneMatch !== null) {
            headerParameters['If-None-Match'] = String(requestParameters.ifNoneMatch);
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("evesso", ["esi-assets.read_assets.v1"]);
        }

        const response = await this.request({
            path: `/characters/{character_id}/assets/`.replace(`{${"character_id"}}`, encodeURIComponent(String(requestParameters.characterId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(GetCharactersCharacterIdAssets200OkFromJSON));
    }

    /**
     * Return a list of the characters assets  --- Alternate route: `/dev/characters/{character_id}/assets/`  Alternate route: `/v5/characters/{character_id}/assets/`  --- This route is cached for up to 3600 seconds
     * Get character assets
     */
    async getCharactersCharacterIdAssets(requestParameters: GetCharactersCharacterIdAssetsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<GetCharactersCharacterIdAssets200Ok>> {
        const response = await this.getCharactersCharacterIdAssetsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Return a list of the corporation assets  --- Alternate route: `/dev/corporations/{corporation_id}/assets/`  Alternate route: `/v5/corporations/{corporation_id}/assets/`  --- This route is cached for up to 3600 seconds  --- Requires one of the following EVE corporation role(s): Director 
     * Get corporation assets
     */
    async getCorporationsCorporationIdAssetsRaw(requestParameters: GetCorporationsCorporationIdAssetsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<GetCorporationsCorporationIdAssets200Ok>>> {
        if (requestParameters.corporationId === null || requestParameters.corporationId === undefined) {
            throw new runtime.RequiredError('corporationId','Required parameter requestParameters.corporationId was null or undefined when calling getCorporationsCorporationIdAssets.');
        }

        const queryParameters: any = {};

        if (requestParameters.datasource !== undefined) {
            queryParameters['datasource'] = requestParameters.datasource;
        }

        if (requestParameters.page !== undefined) {
            queryParameters['page'] = requestParameters.page;
        }

        if (requestParameters.token !== undefined) {
            queryParameters['token'] = requestParameters.token;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.ifNoneMatch !== undefined && requestParameters.ifNoneMatch !== null) {
            headerParameters['If-None-Match'] = String(requestParameters.ifNoneMatch);
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("evesso", ["esi-assets.read_corporation_assets.v1"]);
        }

        const response = await this.request({
            path: `/corporations/{corporation_id}/assets/`.replace(`{${"corporation_id"}}`, encodeURIComponent(String(requestParameters.corporationId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(GetCorporationsCorporationIdAssets200OkFromJSON));
    }

    /**
     * Return a list of the corporation assets  --- Alternate route: `/dev/corporations/{corporation_id}/assets/`  Alternate route: `/v5/corporations/{corporation_id}/assets/`  --- This route is cached for up to 3600 seconds  --- Requires one of the following EVE corporation role(s): Director 
     * Get corporation assets
     */
    async getCorporationsCorporationIdAssets(requestParameters: GetCorporationsCorporationIdAssetsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<GetCorporationsCorporationIdAssets200Ok>> {
        const response = await this.getCorporationsCorporationIdAssetsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Return locations for a set of item ids, which you can get from character assets endpoint. Coordinates for items in hangars or stations are set to (0,0,0)  --- Alternate route: `/dev/characters/{character_id}/assets/locations/`  Alternate route: `/v2/characters/{character_id}/assets/locations/` 
     * Get character asset locations
     */
    async postCharactersCharacterIdAssetsLocationsRaw(requestParameters: PostCharactersCharacterIdAssetsLocationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PostCharactersCharacterIdAssetsLocations200Ok>>> {
        if (requestParameters.characterId === null || requestParameters.characterId === undefined) {
            throw new runtime.RequiredError('characterId','Required parameter requestParameters.characterId was null or undefined when calling postCharactersCharacterIdAssetsLocations.');
        }

        if (requestParameters.itemIds === null || requestParameters.itemIds === undefined) {
            throw new runtime.RequiredError('itemIds','Required parameter requestParameters.itemIds was null or undefined when calling postCharactersCharacterIdAssetsLocations.');
        }

        const queryParameters: any = {};

        if (requestParameters.datasource !== undefined) {
            queryParameters['datasource'] = requestParameters.datasource;
        }

        if (requestParameters.token !== undefined) {
            queryParameters['token'] = requestParameters.token;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("evesso", ["esi-assets.read_assets.v1"]);
        }

        const response = await this.request({
            path: `/characters/{character_id}/assets/locations/`.replace(`{${"character_id"}}`, encodeURIComponent(String(requestParameters.characterId))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.itemIds,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(PostCharactersCharacterIdAssetsLocations200OkFromJSON));
    }

    /**
     * Return locations for a set of item ids, which you can get from character assets endpoint. Coordinates for items in hangars or stations are set to (0,0,0)  --- Alternate route: `/dev/characters/{character_id}/assets/locations/`  Alternate route: `/v2/characters/{character_id}/assets/locations/` 
     * Get character asset locations
     */
    async postCharactersCharacterIdAssetsLocations(requestParameters: PostCharactersCharacterIdAssetsLocationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PostCharactersCharacterIdAssetsLocations200Ok>> {
        const response = await this.postCharactersCharacterIdAssetsLocationsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Return names for a set of item ids, which you can get from character assets endpoint. Typically used for items that can customize names, like containers or ships.  --- Alternate route: `/dev/characters/{character_id}/assets/names/`  Alternate route: `/legacy/characters/{character_id}/assets/names/`  Alternate route: `/v1/characters/{character_id}/assets/names/` 
     * Get character asset names
     */
    async postCharactersCharacterIdAssetsNamesRaw(requestParameters: PostCharactersCharacterIdAssetsNamesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PostCharactersCharacterIdAssetsNames200Ok>>> {
        if (requestParameters.characterId === null || requestParameters.characterId === undefined) {
            throw new runtime.RequiredError('characterId','Required parameter requestParameters.characterId was null or undefined when calling postCharactersCharacterIdAssetsNames.');
        }

        if (requestParameters.itemIds === null || requestParameters.itemIds === undefined) {
            throw new runtime.RequiredError('itemIds','Required parameter requestParameters.itemIds was null or undefined when calling postCharactersCharacterIdAssetsNames.');
        }

        const queryParameters: any = {};

        if (requestParameters.datasource !== undefined) {
            queryParameters['datasource'] = requestParameters.datasource;
        }

        if (requestParameters.token !== undefined) {
            queryParameters['token'] = requestParameters.token;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("evesso", ["esi-assets.read_assets.v1"]);
        }

        const response = await this.request({
            path: `/characters/{character_id}/assets/names/`.replace(`{${"character_id"}}`, encodeURIComponent(String(requestParameters.characterId))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.itemIds,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(PostCharactersCharacterIdAssetsNames200OkFromJSON));
    }

    /**
     * Return names for a set of item ids, which you can get from character assets endpoint. Typically used for items that can customize names, like containers or ships.  --- Alternate route: `/dev/characters/{character_id}/assets/names/`  Alternate route: `/legacy/characters/{character_id}/assets/names/`  Alternate route: `/v1/characters/{character_id}/assets/names/` 
     * Get character asset names
     */
    async postCharactersCharacterIdAssetsNames(requestParameters: PostCharactersCharacterIdAssetsNamesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PostCharactersCharacterIdAssetsNames200Ok>> {
        const response = await this.postCharactersCharacterIdAssetsNamesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Return locations for a set of item ids, which you can get from corporation assets endpoint. Coordinates for items in hangars or stations are set to (0,0,0)  --- Alternate route: `/dev/corporations/{corporation_id}/assets/locations/`  Alternate route: `/v2/corporations/{corporation_id}/assets/locations/`   --- Requires one of the following EVE corporation role(s): Director 
     * Get corporation asset locations
     */
    async postCorporationsCorporationIdAssetsLocationsRaw(requestParameters: PostCorporationsCorporationIdAssetsLocationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PostCorporationsCorporationIdAssetsLocations200Ok>>> {
        if (requestParameters.corporationId === null || requestParameters.corporationId === undefined) {
            throw new runtime.RequiredError('corporationId','Required parameter requestParameters.corporationId was null or undefined when calling postCorporationsCorporationIdAssetsLocations.');
        }

        if (requestParameters.itemIds === null || requestParameters.itemIds === undefined) {
            throw new runtime.RequiredError('itemIds','Required parameter requestParameters.itemIds was null or undefined when calling postCorporationsCorporationIdAssetsLocations.');
        }

        const queryParameters: any = {};

        if (requestParameters.datasource !== undefined) {
            queryParameters['datasource'] = requestParameters.datasource;
        }

        if (requestParameters.token !== undefined) {
            queryParameters['token'] = requestParameters.token;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("evesso", ["esi-assets.read_corporation_assets.v1"]);
        }

        const response = await this.request({
            path: `/corporations/{corporation_id}/assets/locations/`.replace(`{${"corporation_id"}}`, encodeURIComponent(String(requestParameters.corporationId))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.itemIds,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(PostCorporationsCorporationIdAssetsLocations200OkFromJSON));
    }

    /**
     * Return locations for a set of item ids, which you can get from corporation assets endpoint. Coordinates for items in hangars or stations are set to (0,0,0)  --- Alternate route: `/dev/corporations/{corporation_id}/assets/locations/`  Alternate route: `/v2/corporations/{corporation_id}/assets/locations/`   --- Requires one of the following EVE corporation role(s): Director 
     * Get corporation asset locations
     */
    async postCorporationsCorporationIdAssetsLocations(requestParameters: PostCorporationsCorporationIdAssetsLocationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PostCorporationsCorporationIdAssetsLocations200Ok>> {
        const response = await this.postCorporationsCorporationIdAssetsLocationsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Return names for a set of item ids, which you can get from corporation assets endpoint. Only valid for items that can customize names, like containers or ships  --- Alternate route: `/dev/corporations/{corporation_id}/assets/names/`  Alternate route: `/legacy/corporations/{corporation_id}/assets/names/`  Alternate route: `/v1/corporations/{corporation_id}/assets/names/`   --- Requires one of the following EVE corporation role(s): Director 
     * Get corporation asset names
     */
    async postCorporationsCorporationIdAssetsNamesRaw(requestParameters: PostCorporationsCorporationIdAssetsNamesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PostCorporationsCorporationIdAssetsNames200Ok>>> {
        if (requestParameters.corporationId === null || requestParameters.corporationId === undefined) {
            throw new runtime.RequiredError('corporationId','Required parameter requestParameters.corporationId was null or undefined when calling postCorporationsCorporationIdAssetsNames.');
        }

        if (requestParameters.itemIds === null || requestParameters.itemIds === undefined) {
            throw new runtime.RequiredError('itemIds','Required parameter requestParameters.itemIds was null or undefined when calling postCorporationsCorporationIdAssetsNames.');
        }

        const queryParameters: any = {};

        if (requestParameters.datasource !== undefined) {
            queryParameters['datasource'] = requestParameters.datasource;
        }

        if (requestParameters.token !== undefined) {
            queryParameters['token'] = requestParameters.token;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("evesso", ["esi-assets.read_corporation_assets.v1"]);
        }

        const response = await this.request({
            path: `/corporations/{corporation_id}/assets/names/`.replace(`{${"corporation_id"}}`, encodeURIComponent(String(requestParameters.corporationId))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.itemIds,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(PostCorporationsCorporationIdAssetsNames200OkFromJSON));
    }

    /**
     * Return names for a set of item ids, which you can get from corporation assets endpoint. Only valid for items that can customize names, like containers or ships  --- Alternate route: `/dev/corporations/{corporation_id}/assets/names/`  Alternate route: `/legacy/corporations/{corporation_id}/assets/names/`  Alternate route: `/v1/corporations/{corporation_id}/assets/names/`   --- Requires one of the following EVE corporation role(s): Director 
     * Get corporation asset names
     */
    async postCorporationsCorporationIdAssetsNames(requestParameters: PostCorporationsCorporationIdAssetsNamesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PostCorporationsCorporationIdAssetsNames200Ok>> {
        const response = await this.postCorporationsCorporationIdAssetsNamesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const GetCharactersCharacterIdAssetsDatasourceEnum = {
    Tranquility: 'tranquility'
} as const;
export type GetCharactersCharacterIdAssetsDatasourceEnum = typeof GetCharactersCharacterIdAssetsDatasourceEnum[keyof typeof GetCharactersCharacterIdAssetsDatasourceEnum];
/**
 * @export
 */
export const GetCorporationsCorporationIdAssetsDatasourceEnum = {
    Tranquility: 'tranquility'
} as const;
export type GetCorporationsCorporationIdAssetsDatasourceEnum = typeof GetCorporationsCorporationIdAssetsDatasourceEnum[keyof typeof GetCorporationsCorporationIdAssetsDatasourceEnum];
/**
 * @export
 */
export const PostCharactersCharacterIdAssetsLocationsDatasourceEnum = {
    Tranquility: 'tranquility'
} as const;
export type PostCharactersCharacterIdAssetsLocationsDatasourceEnum = typeof PostCharactersCharacterIdAssetsLocationsDatasourceEnum[keyof typeof PostCharactersCharacterIdAssetsLocationsDatasourceEnum];
/**
 * @export
 */
export const PostCharactersCharacterIdAssetsNamesDatasourceEnum = {
    Tranquility: 'tranquility'
} as const;
export type PostCharactersCharacterIdAssetsNamesDatasourceEnum = typeof PostCharactersCharacterIdAssetsNamesDatasourceEnum[keyof typeof PostCharactersCharacterIdAssetsNamesDatasourceEnum];
/**
 * @export
 */
export const PostCorporationsCorporationIdAssetsLocationsDatasourceEnum = {
    Tranquility: 'tranquility'
} as const;
export type PostCorporationsCorporationIdAssetsLocationsDatasourceEnum = typeof PostCorporationsCorporationIdAssetsLocationsDatasourceEnum[keyof typeof PostCorporationsCorporationIdAssetsLocationsDatasourceEnum];
/**
 * @export
 */
export const PostCorporationsCorporationIdAssetsNamesDatasourceEnum = {
    Tranquility: 'tranquility'
} as const;
export type PostCorporationsCorporationIdAssetsNamesDatasourceEnum = typeof PostCorporationsCorporationIdAssetsNamesDatasourceEnum[keyof typeof PostCorporationsCorporationIdAssetsNamesDatasourceEnum];
