/* tslint:disable */
/* eslint-disable */
/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  BadRequest,
  ErrorLimited,
  Forbidden,
  GatewayTimeout,
  GetCharactersCharacterIdKillmailsRecent200Ok,
  GetCorporationsCorporationIdKillmailsRecent200Ok,
  GetKillmailsKillmailIdKillmailHashOk,
  GetKillmailsKillmailIdKillmailHashUnprocessableEntity,
  InternalServerError,
  ServiceUnavailable,
  Unauthorized,
} from '../models';
import {
    BadRequestFromJSON,
    BadRequestToJSON,
    ErrorLimitedFromJSON,
    ErrorLimitedToJSON,
    ForbiddenFromJSON,
    ForbiddenToJSON,
    GatewayTimeoutFromJSON,
    GatewayTimeoutToJSON,
    GetCharactersCharacterIdKillmailsRecent200OkFromJSON,
    GetCharactersCharacterIdKillmailsRecent200OkToJSON,
    GetCorporationsCorporationIdKillmailsRecent200OkFromJSON,
    GetCorporationsCorporationIdKillmailsRecent200OkToJSON,
    GetKillmailsKillmailIdKillmailHashOkFromJSON,
    GetKillmailsKillmailIdKillmailHashOkToJSON,
    GetKillmailsKillmailIdKillmailHashUnprocessableEntityFromJSON,
    GetKillmailsKillmailIdKillmailHashUnprocessableEntityToJSON,
    InternalServerErrorFromJSON,
    InternalServerErrorToJSON,
    ServiceUnavailableFromJSON,
    ServiceUnavailableToJSON,
    UnauthorizedFromJSON,
    UnauthorizedToJSON,
} from '../models';

export interface GetCharactersCharacterIdKillmailsRecentRequest {
    characterId: number;
    datasource?: GetCharactersCharacterIdKillmailsRecentDatasourceEnum;
    ifNoneMatch?: string;
    page?: number;
    token?: string;
}

export interface GetCorporationsCorporationIdKillmailsRecentRequest {
    corporationId: number;
    datasource?: GetCorporationsCorporationIdKillmailsRecentDatasourceEnum;
    ifNoneMatch?: string;
    page?: number;
    token?: string;
}

export interface GetKillmailsKillmailIdKillmailHashRequest {
    killmailHash: string;
    killmailId: number;
    datasource?: GetKillmailsKillmailIdKillmailHashDatasourceEnum;
    ifNoneMatch?: string;
}

/**
 * 
 */
export class KillmailsApi extends runtime.BaseAPI {

    /**
     * Return a list of a character\'s kills and losses going back 90 days  --- Alternate route: `/dev/characters/{character_id}/killmails/recent/`  Alternate route: `/legacy/characters/{character_id}/killmails/recent/`  Alternate route: `/v1/characters/{character_id}/killmails/recent/`  --- This route is cached for up to 300 seconds
     * Get a character\'s recent kills and losses
     */
    async getCharactersCharacterIdKillmailsRecentRaw(requestParameters: GetCharactersCharacterIdKillmailsRecentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<GetCharactersCharacterIdKillmailsRecent200Ok>>> {
        if (requestParameters.characterId === null || requestParameters.characterId === undefined) {
            throw new runtime.RequiredError('characterId','Required parameter requestParameters.characterId was null or undefined when calling getCharactersCharacterIdKillmailsRecent.');
        }

        const queryParameters: any = {};

        if (requestParameters.datasource !== undefined) {
            queryParameters['datasource'] = requestParameters.datasource;
        }

        if (requestParameters.page !== undefined) {
            queryParameters['page'] = requestParameters.page;
        }

        if (requestParameters.token !== undefined) {
            queryParameters['token'] = requestParameters.token;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.ifNoneMatch !== undefined && requestParameters.ifNoneMatch !== null) {
            headerParameters['If-None-Match'] = String(requestParameters.ifNoneMatch);
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("evesso", ["esi-killmails.read_killmails.v1"]);
        }

        const response = await this.request({
            path: `/characters/{character_id}/killmails/recent/`.replace(`{${"character_id"}}`, encodeURIComponent(String(requestParameters.characterId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(GetCharactersCharacterIdKillmailsRecent200OkFromJSON));
    }

    /**
     * Return a list of a character\'s kills and losses going back 90 days  --- Alternate route: `/dev/characters/{character_id}/killmails/recent/`  Alternate route: `/legacy/characters/{character_id}/killmails/recent/`  Alternate route: `/v1/characters/{character_id}/killmails/recent/`  --- This route is cached for up to 300 seconds
     * Get a character\'s recent kills and losses
     */
    async getCharactersCharacterIdKillmailsRecent(requestParameters: GetCharactersCharacterIdKillmailsRecentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<GetCharactersCharacterIdKillmailsRecent200Ok>> {
        const response = await this.getCharactersCharacterIdKillmailsRecentRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get a list of a corporation\'s kills and losses going back 90 days  --- Alternate route: `/dev/corporations/{corporation_id}/killmails/recent/`  Alternate route: `/legacy/corporations/{corporation_id}/killmails/recent/`  Alternate route: `/v1/corporations/{corporation_id}/killmails/recent/`  --- This route is cached for up to 300 seconds  --- Requires one of the following EVE corporation role(s): Director 
     * Get a corporation\'s recent kills and losses
     */
    async getCorporationsCorporationIdKillmailsRecentRaw(requestParameters: GetCorporationsCorporationIdKillmailsRecentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<GetCorporationsCorporationIdKillmailsRecent200Ok>>> {
        if (requestParameters.corporationId === null || requestParameters.corporationId === undefined) {
            throw new runtime.RequiredError('corporationId','Required parameter requestParameters.corporationId was null or undefined when calling getCorporationsCorporationIdKillmailsRecent.');
        }

        const queryParameters: any = {};

        if (requestParameters.datasource !== undefined) {
            queryParameters['datasource'] = requestParameters.datasource;
        }

        if (requestParameters.page !== undefined) {
            queryParameters['page'] = requestParameters.page;
        }

        if (requestParameters.token !== undefined) {
            queryParameters['token'] = requestParameters.token;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.ifNoneMatch !== undefined && requestParameters.ifNoneMatch !== null) {
            headerParameters['If-None-Match'] = String(requestParameters.ifNoneMatch);
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("evesso", ["esi-killmails.read_corporation_killmails.v1"]);
        }

        const response = await this.request({
            path: `/corporations/{corporation_id}/killmails/recent/`.replace(`{${"corporation_id"}}`, encodeURIComponent(String(requestParameters.corporationId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(GetCorporationsCorporationIdKillmailsRecent200OkFromJSON));
    }

    /**
     * Get a list of a corporation\'s kills and losses going back 90 days  --- Alternate route: `/dev/corporations/{corporation_id}/killmails/recent/`  Alternate route: `/legacy/corporations/{corporation_id}/killmails/recent/`  Alternate route: `/v1/corporations/{corporation_id}/killmails/recent/`  --- This route is cached for up to 300 seconds  --- Requires one of the following EVE corporation role(s): Director 
     * Get a corporation\'s recent kills and losses
     */
    async getCorporationsCorporationIdKillmailsRecent(requestParameters: GetCorporationsCorporationIdKillmailsRecentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<GetCorporationsCorporationIdKillmailsRecent200Ok>> {
        const response = await this.getCorporationsCorporationIdKillmailsRecentRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Return a single killmail from its ID and hash  --- Alternate route: `/dev/killmails/{killmail_id}/{killmail_hash}/`  Alternate route: `/legacy/killmails/{killmail_id}/{killmail_hash}/`  Alternate route: `/v1/killmails/{killmail_id}/{killmail_hash}/`  --- This route is cached for up to 30758400 seconds
     * Get a single killmail
     */
    async getKillmailsKillmailIdKillmailHashRaw(requestParameters: GetKillmailsKillmailIdKillmailHashRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetKillmailsKillmailIdKillmailHashOk>> {
        if (requestParameters.killmailHash === null || requestParameters.killmailHash === undefined) {
            throw new runtime.RequiredError('killmailHash','Required parameter requestParameters.killmailHash was null or undefined when calling getKillmailsKillmailIdKillmailHash.');
        }

        if (requestParameters.killmailId === null || requestParameters.killmailId === undefined) {
            throw new runtime.RequiredError('killmailId','Required parameter requestParameters.killmailId was null or undefined when calling getKillmailsKillmailIdKillmailHash.');
        }

        const queryParameters: any = {};

        if (requestParameters.datasource !== undefined) {
            queryParameters['datasource'] = requestParameters.datasource;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.ifNoneMatch !== undefined && requestParameters.ifNoneMatch !== null) {
            headerParameters['If-None-Match'] = String(requestParameters.ifNoneMatch);
        }

        const response = await this.request({
            path: `/killmails/{killmail_id}/{killmail_hash}/`.replace(`{${"killmail_hash"}}`, encodeURIComponent(String(requestParameters.killmailHash))).replace(`{${"killmail_id"}}`, encodeURIComponent(String(requestParameters.killmailId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetKillmailsKillmailIdKillmailHashOkFromJSON(jsonValue));
    }

    /**
     * Return a single killmail from its ID and hash  --- Alternate route: `/dev/killmails/{killmail_id}/{killmail_hash}/`  Alternate route: `/legacy/killmails/{killmail_id}/{killmail_hash}/`  Alternate route: `/v1/killmails/{killmail_id}/{killmail_hash}/`  --- This route is cached for up to 30758400 seconds
     * Get a single killmail
     */
    async getKillmailsKillmailIdKillmailHash(requestParameters: GetKillmailsKillmailIdKillmailHashRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetKillmailsKillmailIdKillmailHashOk> {
        const response = await this.getKillmailsKillmailIdKillmailHashRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const GetCharactersCharacterIdKillmailsRecentDatasourceEnum = {
    Tranquility: 'tranquility'
} as const;
export type GetCharactersCharacterIdKillmailsRecentDatasourceEnum = typeof GetCharactersCharacterIdKillmailsRecentDatasourceEnum[keyof typeof GetCharactersCharacterIdKillmailsRecentDatasourceEnum];
/**
 * @export
 */
export const GetCorporationsCorporationIdKillmailsRecentDatasourceEnum = {
    Tranquility: 'tranquility'
} as const;
export type GetCorporationsCorporationIdKillmailsRecentDatasourceEnum = typeof GetCorporationsCorporationIdKillmailsRecentDatasourceEnum[keyof typeof GetCorporationsCorporationIdKillmailsRecentDatasourceEnum];
/**
 * @export
 */
export const GetKillmailsKillmailIdKillmailHashDatasourceEnum = {
    Tranquility: 'tranquility'
} as const;
export type GetKillmailsKillmailIdKillmailHashDatasourceEnum = typeof GetKillmailsKillmailIdKillmailHashDatasourceEnum[keyof typeof GetKillmailsKillmailIdKillmailHashDatasourceEnum];
