/* tslint:disable */
/* eslint-disable */
/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.25
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 200 ok object
 * @export
 * @interface GetContractsPublicBidsContractId200Ok
 */
export interface GetContractsPublicBidsContractId200Ok {
    /**
     * The amount bid, in ISK
     * @type {number}
     * @memberof GetContractsPublicBidsContractId200Ok
     */
    amount: number;
    /**
     * Unique ID for the bid
     * @type {number}
     * @memberof GetContractsPublicBidsContractId200Ok
     */
    bidId: number;
    /**
     * Datetime when the bid was placed
     * @type {Date}
     * @memberof GetContractsPublicBidsContractId200Ok
     */
    dateBid: Date;
}

/**
 * Check if a given object implements the GetContractsPublicBidsContractId200Ok interface.
 */
export function instanceOfGetContractsPublicBidsContractId200Ok(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "bidId" in value;
    isInstance = isInstance && "dateBid" in value;

    return isInstance;
}

export function GetContractsPublicBidsContractId200OkFromJSON(json: any): GetContractsPublicBidsContractId200Ok {
    return GetContractsPublicBidsContractId200OkFromJSONTyped(json, false);
}

export function GetContractsPublicBidsContractId200OkFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetContractsPublicBidsContractId200Ok {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amount': json['amount'],
        'bidId': json['bid_id'],
        'dateBid': (new Date(json['date_bid'])),
    };
}

export function GetContractsPublicBidsContractId200OkToJSON(value?: GetContractsPublicBidsContractId200Ok | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amount': value.amount,
        'bid_id': value.bidId,
        'date_bid': (value.dateBid.toISOString()),
    };
}

