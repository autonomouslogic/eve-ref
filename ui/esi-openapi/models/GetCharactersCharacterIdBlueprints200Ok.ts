/* tslint:disable */
/* eslint-disable */
/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.25
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 200 ok object
 * @export
 * @interface GetCharactersCharacterIdBlueprints200Ok
 */
export interface GetCharactersCharacterIdBlueprints200Ok {
    /**
     * Unique ID for this item.
     * @type {number}
     * @memberof GetCharactersCharacterIdBlueprints200Ok
     */
    itemId: number;
    /**
     * Type of the location_id
     * @type {string}
     * @memberof GetCharactersCharacterIdBlueprints200Ok
     */
    locationFlag: GetCharactersCharacterIdBlueprints200OkLocationFlagEnum;
    /**
     * References a station, a ship or an item_id if this blueprint is located within a container. If the return value is an item_id, then the Character AssetList API must be queried to find the container using the given item_id to determine the correct location of the Blueprint.
     * @type {number}
     * @memberof GetCharactersCharacterIdBlueprints200Ok
     */
    locationId: number;
    /**
     * Material Efficiency Level of the blueprint.
     * @type {number}
     * @memberof GetCharactersCharacterIdBlueprints200Ok
     */
    materialEfficiency: number;
    /**
     * A range of numbers with a minimum of -2 and no maximum value where -1 is an original and -2 is a copy. It can be a positive integer if it is a stack of blueprint originals fresh from the market (e.g. no activities performed on them yet).
     * @type {number}
     * @memberof GetCharactersCharacterIdBlueprints200Ok
     */
    quantity: number;
    /**
     * Number of runs remaining if the blueprint is a copy, -1 if it is an original.
     * @type {number}
     * @memberof GetCharactersCharacterIdBlueprints200Ok
     */
    runs: number;
    /**
     * Time Efficiency Level of the blueprint.
     * @type {number}
     * @memberof GetCharactersCharacterIdBlueprints200Ok
     */
    timeEfficiency: number;
    /**
     * type_id integer
     * @type {number}
     * @memberof GetCharactersCharacterIdBlueprints200Ok
     */
    typeId: number;
}


/**
 * @export
 */
export const GetCharactersCharacterIdBlueprints200OkLocationFlagEnum = {
    AutoFit: 'AutoFit',
    Cargo: 'Cargo',
    CorpseBay: 'CorpseBay',
    DroneBay: 'DroneBay',
    FleetHangar: 'FleetHangar',
    Deliveries: 'Deliveries',
    HiddenModifiers: 'HiddenModifiers',
    Hangar: 'Hangar',
    HangarAll: 'HangarAll',
    LoSlot0: 'LoSlot0',
    LoSlot1: 'LoSlot1',
    LoSlot2: 'LoSlot2',
    LoSlot3: 'LoSlot3',
    LoSlot4: 'LoSlot4',
    LoSlot5: 'LoSlot5',
    LoSlot6: 'LoSlot6',
    LoSlot7: 'LoSlot7',
    MedSlot0: 'MedSlot0',
    MedSlot1: 'MedSlot1',
    MedSlot2: 'MedSlot2',
    MedSlot3: 'MedSlot3',
    MedSlot4: 'MedSlot4',
    MedSlot5: 'MedSlot5',
    MedSlot6: 'MedSlot6',
    MedSlot7: 'MedSlot7',
    HiSlot0: 'HiSlot0',
    HiSlot1: 'HiSlot1',
    HiSlot2: 'HiSlot2',
    HiSlot3: 'HiSlot3',
    HiSlot4: 'HiSlot4',
    HiSlot5: 'HiSlot5',
    HiSlot6: 'HiSlot6',
    HiSlot7: 'HiSlot7',
    AssetSafety: 'AssetSafety',
    Locked: 'Locked',
    Unlocked: 'Unlocked',
    Implant: 'Implant',
    QuafeBay: 'QuafeBay',
    RigSlot0: 'RigSlot0',
    RigSlot1: 'RigSlot1',
    RigSlot2: 'RigSlot2',
    RigSlot3: 'RigSlot3',
    RigSlot4: 'RigSlot4',
    RigSlot5: 'RigSlot5',
    RigSlot6: 'RigSlot6',
    RigSlot7: 'RigSlot7',
    ShipHangar: 'ShipHangar',
    SpecializedFuelBay: 'SpecializedFuelBay',
    SpecializedOreHold: 'SpecializedOreHold',
    SpecializedGasHold: 'SpecializedGasHold',
    SpecializedMineralHold: 'SpecializedMineralHold',
    SpecializedSalvageHold: 'SpecializedSalvageHold',
    SpecializedShipHold: 'SpecializedShipHold',
    SpecializedSmallShipHold: 'SpecializedSmallShipHold',
    SpecializedMediumShipHold: 'SpecializedMediumShipHold',
    SpecializedLargeShipHold: 'SpecializedLargeShipHold',
    SpecializedIndustrialShipHold: 'SpecializedIndustrialShipHold',
    SpecializedAmmoHold: 'SpecializedAmmoHold',
    SpecializedCommandCenterHold: 'SpecializedCommandCenterHold',
    SpecializedPlanetaryCommoditiesHold: 'SpecializedPlanetaryCommoditiesHold',
    SpecializedMaterialBay: 'SpecializedMaterialBay',
    SubSystemSlot0: 'SubSystemSlot0',
    SubSystemSlot1: 'SubSystemSlot1',
    SubSystemSlot2: 'SubSystemSlot2',
    SubSystemSlot3: 'SubSystemSlot3',
    SubSystemSlot4: 'SubSystemSlot4',
    SubSystemSlot5: 'SubSystemSlot5',
    SubSystemSlot6: 'SubSystemSlot6',
    SubSystemSlot7: 'SubSystemSlot7',
    FighterBay: 'FighterBay',
    FighterTube0: 'FighterTube0',
    FighterTube1: 'FighterTube1',
    FighterTube2: 'FighterTube2',
    FighterTube3: 'FighterTube3',
    FighterTube4: 'FighterTube4',
    Module: 'Module'
} as const;
export type GetCharactersCharacterIdBlueprints200OkLocationFlagEnum = typeof GetCharactersCharacterIdBlueprints200OkLocationFlagEnum[keyof typeof GetCharactersCharacterIdBlueprints200OkLocationFlagEnum];


/**
 * Check if a given object implements the GetCharactersCharacterIdBlueprints200Ok interface.
 */
export function instanceOfGetCharactersCharacterIdBlueprints200Ok(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "itemId" in value;
    isInstance = isInstance && "locationFlag" in value;
    isInstance = isInstance && "locationId" in value;
    isInstance = isInstance && "materialEfficiency" in value;
    isInstance = isInstance && "quantity" in value;
    isInstance = isInstance && "runs" in value;
    isInstance = isInstance && "timeEfficiency" in value;
    isInstance = isInstance && "typeId" in value;

    return isInstance;
}

export function GetCharactersCharacterIdBlueprints200OkFromJSON(json: any): GetCharactersCharacterIdBlueprints200Ok {
    return GetCharactersCharacterIdBlueprints200OkFromJSONTyped(json, false);
}

export function GetCharactersCharacterIdBlueprints200OkFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetCharactersCharacterIdBlueprints200Ok {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'itemId': json['item_id'],
        'locationFlag': json['location_flag'],
        'locationId': json['location_id'],
        'materialEfficiency': json['material_efficiency'],
        'quantity': json['quantity'],
        'runs': json['runs'],
        'timeEfficiency': json['time_efficiency'],
        'typeId': json['type_id'],
    };
}

export function GetCharactersCharacterIdBlueprints200OkToJSON(value?: GetCharactersCharacterIdBlueprints200Ok | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'item_id': value.itemId,
        'location_flag': value.locationFlag,
        'location_id': value.locationId,
        'material_efficiency': value.materialEfficiency,
        'quantity': value.quantity,
        'runs': value.runs,
        'time_efficiency': value.timeEfficiency,
        'type_id': value.typeId,
    };
}

