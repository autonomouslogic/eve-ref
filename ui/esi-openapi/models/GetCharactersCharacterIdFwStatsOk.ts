/* tslint:disable */
/* eslint-disable */
/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GetCharactersCharacterIdFwStatsKills } from './GetCharactersCharacterIdFwStatsKills';
import {
    GetCharactersCharacterIdFwStatsKillsFromJSON,
    GetCharactersCharacterIdFwStatsKillsFromJSONTyped,
    GetCharactersCharacterIdFwStatsKillsToJSON,
} from './GetCharactersCharacterIdFwStatsKills';
import type { GetCharactersCharacterIdFwStatsVictoryPoints } from './GetCharactersCharacterIdFwStatsVictoryPoints';
import {
    GetCharactersCharacterIdFwStatsVictoryPointsFromJSON,
    GetCharactersCharacterIdFwStatsVictoryPointsFromJSONTyped,
    GetCharactersCharacterIdFwStatsVictoryPointsToJSON,
} from './GetCharactersCharacterIdFwStatsVictoryPoints';

/**
 * 200 ok object
 * @export
 * @interface GetCharactersCharacterIdFwStatsOk
 */
export interface GetCharactersCharacterIdFwStatsOk {
    /**
     * The given character's current faction rank
     * @type {number}
     * @memberof GetCharactersCharacterIdFwStatsOk
     */
    currentRank?: number;
    /**
     * The enlistment date of the given character into faction warfare. Will not be included if character is not enlisted in faction warfare
     * @type {Date}
     * @memberof GetCharactersCharacterIdFwStatsOk
     */
    enlistedOn?: Date;
    /**
     * The faction the given character is enlisted to fight for. Will not be included if character is not enlisted in faction warfare
     * @type {number}
     * @memberof GetCharactersCharacterIdFwStatsOk
     */
    factionId?: number;
    /**
     * The given character's highest faction rank achieved
     * @type {number}
     * @memberof GetCharactersCharacterIdFwStatsOk
     */
    highestRank?: number;
    /**
     * 
     * @type {GetCharactersCharacterIdFwStatsKills}
     * @memberof GetCharactersCharacterIdFwStatsOk
     */
    kills: GetCharactersCharacterIdFwStatsKills;
    /**
     * 
     * @type {GetCharactersCharacterIdFwStatsVictoryPoints}
     * @memberof GetCharactersCharacterIdFwStatsOk
     */
    victoryPoints: GetCharactersCharacterIdFwStatsVictoryPoints;
}

/**
 * Check if a given object implements the GetCharactersCharacterIdFwStatsOk interface.
 */
export function instanceOfGetCharactersCharacterIdFwStatsOk(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "kills" in value;
    isInstance = isInstance && "victoryPoints" in value;

    return isInstance;
}

export function GetCharactersCharacterIdFwStatsOkFromJSON(json: any): GetCharactersCharacterIdFwStatsOk {
    return GetCharactersCharacterIdFwStatsOkFromJSONTyped(json, false);
}

export function GetCharactersCharacterIdFwStatsOkFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetCharactersCharacterIdFwStatsOk {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'currentRank': !exists(json, 'current_rank') ? undefined : json['current_rank'],
        'enlistedOn': !exists(json, 'enlisted_on') ? undefined : (new Date(json['enlisted_on'])),
        'factionId': !exists(json, 'faction_id') ? undefined : json['faction_id'],
        'highestRank': !exists(json, 'highest_rank') ? undefined : json['highest_rank'],
        'kills': GetCharactersCharacterIdFwStatsKillsFromJSON(json['kills']),
        'victoryPoints': GetCharactersCharacterIdFwStatsVictoryPointsFromJSON(json['victory_points']),
    };
}

export function GetCharactersCharacterIdFwStatsOkToJSON(value?: GetCharactersCharacterIdFwStatsOk | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'current_rank': value.currentRank,
        'enlisted_on': value.enlistedOn === undefined ? undefined : (value.enlistedOn.toISOString()),
        'faction_id': value.factionId,
        'highest_rank': value.highestRank,
        'kills': GetCharactersCharacterIdFwStatsKillsToJSON(value.kills),
        'victory_points': GetCharactersCharacterIdFwStatsVictoryPointsToJSON(value.victoryPoints),
    };
}

