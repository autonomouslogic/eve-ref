/* tslint:disable */
/* eslint-disable */
/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.25
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 200 ok object
 * @export
 * @interface GetDogmaAttributesAttributeIdOk
 */
export interface GetDogmaAttributesAttributeIdOk {
    /**
     * attribute_id integer
     * @type {number}
     * @memberof GetDogmaAttributesAttributeIdOk
     */
    attributeId: number;
    /**
     * default_value number
     * @type {number}
     * @memberof GetDogmaAttributesAttributeIdOk
     */
    defaultValue?: number;
    /**
     * description string
     * @type {string}
     * @memberof GetDogmaAttributesAttributeIdOk
     */
    description?: string;
    /**
     * display_name string
     * @type {string}
     * @memberof GetDogmaAttributesAttributeIdOk
     */
    displayName?: string;
    /**
     * high_is_good boolean
     * @type {boolean}
     * @memberof GetDogmaAttributesAttributeIdOk
     */
    highIsGood?: boolean;
    /**
     * icon_id integer
     * @type {number}
     * @memberof GetDogmaAttributesAttributeIdOk
     */
    iconId?: number;
    /**
     * name string
     * @type {string}
     * @memberof GetDogmaAttributesAttributeIdOk
     */
    name?: string;
    /**
     * published boolean
     * @type {boolean}
     * @memberof GetDogmaAttributesAttributeIdOk
     */
    published?: boolean;
    /**
     * stackable boolean
     * @type {boolean}
     * @memberof GetDogmaAttributesAttributeIdOk
     */
    stackable?: boolean;
    /**
     * unit_id integer
     * @type {number}
     * @memberof GetDogmaAttributesAttributeIdOk
     */
    unitId?: number;
}

/**
 * Check if a given object implements the GetDogmaAttributesAttributeIdOk interface.
 */
export function instanceOfGetDogmaAttributesAttributeIdOk(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "attributeId" in value;

    return isInstance;
}

export function GetDogmaAttributesAttributeIdOkFromJSON(json: any): GetDogmaAttributesAttributeIdOk {
    return GetDogmaAttributesAttributeIdOkFromJSONTyped(json, false);
}

export function GetDogmaAttributesAttributeIdOkFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetDogmaAttributesAttributeIdOk {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'attributeId': json['attribute_id'],
        'defaultValue': !exists(json, 'default_value') ? undefined : json['default_value'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'displayName': !exists(json, 'display_name') ? undefined : json['display_name'],
        'highIsGood': !exists(json, 'high_is_good') ? undefined : json['high_is_good'],
        'iconId': !exists(json, 'icon_id') ? undefined : json['icon_id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'published': !exists(json, 'published') ? undefined : json['published'],
        'stackable': !exists(json, 'stackable') ? undefined : json['stackable'],
        'unitId': !exists(json, 'unit_id') ? undefined : json['unit_id'],
    };
}

export function GetDogmaAttributesAttributeIdOkToJSON(value?: GetDogmaAttributesAttributeIdOk | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attribute_id': value.attributeId,
        'default_value': value.defaultValue,
        'description': value.description,
        'display_name': value.displayName,
        'high_is_good': value.highIsGood,
        'icon_id': value.iconId,
        'name': value.name,
        'published': value.published,
        'stackable': value.stackable,
        'unit_id': value.unitId,
    };
}

