/* tslint:disable */
/* eslint-disable */
/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.25
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PostCharactersCharacterIdMailRecipient } from './PostCharactersCharacterIdMailRecipient';
import {
    PostCharactersCharacterIdMailRecipientFromJSON,
    PostCharactersCharacterIdMailRecipientFromJSONTyped,
    PostCharactersCharacterIdMailRecipientToJSON,
} from './PostCharactersCharacterIdMailRecipient';

/**
 * mail object
 * @export
 * @interface PostCharactersCharacterIdMailMail
 */
export interface PostCharactersCharacterIdMailMail {
    /**
     * approved_cost integer
     * @type {number}
     * @memberof PostCharactersCharacterIdMailMail
     */
    approvedCost?: number;
    /**
     * body string
     * @type {string}
     * @memberof PostCharactersCharacterIdMailMail
     */
    body: string;
    /**
     * recipients array
     * @type {Array<PostCharactersCharacterIdMailRecipient>}
     * @memberof PostCharactersCharacterIdMailMail
     */
    recipients: Array<PostCharactersCharacterIdMailRecipient>;
    /**
     * subject string
     * @type {string}
     * @memberof PostCharactersCharacterIdMailMail
     */
    subject: string;
}

/**
 * Check if a given object implements the PostCharactersCharacterIdMailMail interface.
 */
export function instanceOfPostCharactersCharacterIdMailMail(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "body" in value;
    isInstance = isInstance && "recipients" in value;
    isInstance = isInstance && "subject" in value;

    return isInstance;
}

export function PostCharactersCharacterIdMailMailFromJSON(json: any): PostCharactersCharacterIdMailMail {
    return PostCharactersCharacterIdMailMailFromJSONTyped(json, false);
}

export function PostCharactersCharacterIdMailMailFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostCharactersCharacterIdMailMail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'approvedCost': !exists(json, 'approved_cost') ? undefined : json['approved_cost'],
        'body': json['body'],
        'recipients': ((json['recipients'] as Array<any>).map(PostCharactersCharacterIdMailRecipientFromJSON)),
        'subject': json['subject'],
    };
}

export function PostCharactersCharacterIdMailMailToJSON(value?: PostCharactersCharacterIdMailMail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'approved_cost': value.approvedCost,
        'body': value.body,
        'recipients': ((value.recipients as Array<any>).map(PostCharactersCharacterIdMailRecipientToJSON)),
        'subject': value.subject,
    };
}

