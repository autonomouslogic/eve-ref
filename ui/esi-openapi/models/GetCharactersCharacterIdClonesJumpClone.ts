/* tslint:disable */
/* eslint-disable */
/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * jump_clone object
 * @export
 * @interface GetCharactersCharacterIdClonesJumpClone
 */
export interface GetCharactersCharacterIdClonesJumpClone {
    /**
     * implants array
     * @type {Array<number>}
     * @memberof GetCharactersCharacterIdClonesJumpClone
     */
    implants: Array<number>;
    /**
     * jump_clone_id integer
     * @type {number}
     * @memberof GetCharactersCharacterIdClonesJumpClone
     */
    jumpCloneId: number;
    /**
     * location_id integer
     * @type {number}
     * @memberof GetCharactersCharacterIdClonesJumpClone
     */
    locationId: number;
    /**
     * location_type string
     * @type {string}
     * @memberof GetCharactersCharacterIdClonesJumpClone
     */
    locationType: GetCharactersCharacterIdClonesJumpCloneLocationTypeEnum;
    /**
     * name string
     * @type {string}
     * @memberof GetCharactersCharacterIdClonesJumpClone
     */
    name?: string;
}


/**
 * @export
 */
export const GetCharactersCharacterIdClonesJumpCloneLocationTypeEnum = {
    Station: 'station',
    Structure: 'structure'
} as const;
export type GetCharactersCharacterIdClonesJumpCloneLocationTypeEnum = typeof GetCharactersCharacterIdClonesJumpCloneLocationTypeEnum[keyof typeof GetCharactersCharacterIdClonesJumpCloneLocationTypeEnum];


/**
 * Check if a given object implements the GetCharactersCharacterIdClonesJumpClone interface.
 */
export function instanceOfGetCharactersCharacterIdClonesJumpClone(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "implants" in value;
    isInstance = isInstance && "jumpCloneId" in value;
    isInstance = isInstance && "locationId" in value;
    isInstance = isInstance && "locationType" in value;

    return isInstance;
}

export function GetCharactersCharacterIdClonesJumpCloneFromJSON(json: any): GetCharactersCharacterIdClonesJumpClone {
    return GetCharactersCharacterIdClonesJumpCloneFromJSONTyped(json, false);
}

export function GetCharactersCharacterIdClonesJumpCloneFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetCharactersCharacterIdClonesJumpClone {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'implants': json['implants'],
        'jumpCloneId': json['jump_clone_id'],
        'locationId': json['location_id'],
        'locationType': json['location_type'],
        'name': !exists(json, 'name') ? undefined : json['name'],
    };
}

export function GetCharactersCharacterIdClonesJumpCloneToJSON(value?: GetCharactersCharacterIdClonesJumpClone | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'implants': value.implants,
        'jump_clone_id': value.jumpCloneId,
        'location_id': value.locationId,
        'location_type': value.locationType,
        'name': value.name,
    };
}

