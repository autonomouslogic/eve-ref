/* tslint:disable */
/* eslint-disable */
/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.25
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 200 ok object
 * @export
 * @interface GetCharactersCharacterIdAttributesOk
 */
export interface GetCharactersCharacterIdAttributesOk {
    /**
     * Neural remapping cooldown after a character uses remap accrued over time
     * @type {Date}
     * @memberof GetCharactersCharacterIdAttributesOk
     */
    accruedRemapCooldownDate?: Date;
    /**
     * Number of available bonus character neural remaps
     * @type {number}
     * @memberof GetCharactersCharacterIdAttributesOk
     */
    bonusRemaps?: number;
    /**
     * charisma integer
     * @type {number}
     * @memberof GetCharactersCharacterIdAttributesOk
     */
    charisma: number;
    /**
     * intelligence integer
     * @type {number}
     * @memberof GetCharactersCharacterIdAttributesOk
     */
    intelligence: number;
    /**
     * Datetime of last neural remap, including usage of bonus remaps
     * @type {Date}
     * @memberof GetCharactersCharacterIdAttributesOk
     */
    lastRemapDate?: Date;
    /**
     * memory integer
     * @type {number}
     * @memberof GetCharactersCharacterIdAttributesOk
     */
    memory: number;
    /**
     * perception integer
     * @type {number}
     * @memberof GetCharactersCharacterIdAttributesOk
     */
    perception: number;
    /**
     * willpower integer
     * @type {number}
     * @memberof GetCharactersCharacterIdAttributesOk
     */
    willpower: number;
}

/**
 * Check if a given object implements the GetCharactersCharacterIdAttributesOk interface.
 */
export function instanceOfGetCharactersCharacterIdAttributesOk(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "charisma" in value;
    isInstance = isInstance && "intelligence" in value;
    isInstance = isInstance && "memory" in value;
    isInstance = isInstance && "perception" in value;
    isInstance = isInstance && "willpower" in value;

    return isInstance;
}

export function GetCharactersCharacterIdAttributesOkFromJSON(json: any): GetCharactersCharacterIdAttributesOk {
    return GetCharactersCharacterIdAttributesOkFromJSONTyped(json, false);
}

export function GetCharactersCharacterIdAttributesOkFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetCharactersCharacterIdAttributesOk {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accruedRemapCooldownDate': !exists(json, 'accrued_remap_cooldown_date') ? undefined : (new Date(json['accrued_remap_cooldown_date'])),
        'bonusRemaps': !exists(json, 'bonus_remaps') ? undefined : json['bonus_remaps'],
        'charisma': json['charisma'],
        'intelligence': json['intelligence'],
        'lastRemapDate': !exists(json, 'last_remap_date') ? undefined : (new Date(json['last_remap_date'])),
        'memory': json['memory'],
        'perception': json['perception'],
        'willpower': json['willpower'],
    };
}

export function GetCharactersCharacterIdAttributesOkToJSON(value?: GetCharactersCharacterIdAttributesOk | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accrued_remap_cooldown_date': value.accruedRemapCooldownDate === undefined ? undefined : (value.accruedRemapCooldownDate.toISOString()),
        'bonus_remaps': value.bonusRemaps,
        'charisma': value.charisma,
        'intelligence': value.intelligence,
        'last_remap_date': value.lastRemapDate === undefined ? undefined : (value.lastRemapDate.toISOString()),
        'memory': value.memory,
        'perception': value.perception,
        'willpower': value.willpower,
    };
}

