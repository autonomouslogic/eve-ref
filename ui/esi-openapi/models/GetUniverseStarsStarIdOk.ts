/* tslint:disable */
/* eslint-disable */
/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 200 ok object
 * @export
 * @interface GetUniverseStarsStarIdOk
 */
export interface GetUniverseStarsStarIdOk {
    /**
     * Age of star in years
     * @type {number}
     * @memberof GetUniverseStarsStarIdOk
     */
    age: number;
    /**
     * luminosity number
     * @type {number}
     * @memberof GetUniverseStarsStarIdOk
     */
    luminosity: number;
    /**
     * name string
     * @type {string}
     * @memberof GetUniverseStarsStarIdOk
     */
    name: string;
    /**
     * radius integer
     * @type {number}
     * @memberof GetUniverseStarsStarIdOk
     */
    radius: number;
    /**
     * solar_system_id integer
     * @type {number}
     * @memberof GetUniverseStarsStarIdOk
     */
    solarSystemId: number;
    /**
     * spectral_class string
     * @type {string}
     * @memberof GetUniverseStarsStarIdOk
     */
    spectralClass: GetUniverseStarsStarIdOkSpectralClassEnum;
    /**
     * temperature integer
     * @type {number}
     * @memberof GetUniverseStarsStarIdOk
     */
    temperature: number;
    /**
     * type_id integer
     * @type {number}
     * @memberof GetUniverseStarsStarIdOk
     */
    typeId: number;
}


/**
 * @export
 */
export const GetUniverseStarsStarIdOkSpectralClassEnum = {
    K2V: 'K2 V',
    K4V: 'K4 V',
    G2V: 'G2 V',
    G8V: 'G8 V',
    M7V: 'M7 V',
    K7V: 'K7 V',
    M2V: 'M2 V',
    K5V: 'K5 V',
    M3V: 'M3 V',
    G0V: 'G0 V',
    G7V: 'G7 V',
    G3V: 'G3 V',
    F9V: 'F9 V',
    G5V: 'G5 V',
    F6V: 'F6 V',
    K8V: 'K8 V',
    K9V: 'K9 V',
    K6V: 'K6 V',
    G9V: 'G9 V',
    G6V: 'G6 V',
    G4Vi: 'G4 VI',
    G4V: 'G4 V',
    F8V: 'F8 V',
    F2V: 'F2 V',
    F1V: 'F1 V',
    K3V: 'K3 V',
    F0Vi: 'F0 VI',
    G1Vi: 'G1 VI',
    G0Vi: 'G0 VI',
    K1V: 'K1 V',
    M4V: 'M4 V',
    M1V: 'M1 V',
    M6V: 'M6 V',
    M0V: 'M0 V',
    K2Iv: 'K2 IV',
    G2Vi: 'G2 VI',
    K0V: 'K0 V',
    K5Iv: 'K5 IV',
    F5Vi: 'F5 VI',
    G6Vi: 'G6 VI',
    F6Vi: 'F6 VI',
    F2Iv: 'F2 IV',
    G3Vi: 'G3 VI',
    M8V: 'M8 V',
    F1Vi: 'F1 VI',
    K1Iv: 'K1 IV',
    F7V: 'F7 V',
    G5Vi: 'G5 VI',
    M5V: 'M5 V',
    G7Vi: 'G7 VI',
    F5V: 'F5 V',
    F4Vi: 'F4 VI',
    F8Vi: 'F8 VI',
    K3Iv: 'K3 IV',
    F4Iv: 'F4 IV',
    F0V: 'F0 V',
    G7Iv: 'G7 IV',
    G8Vi: 'G8 VI',
    F2Vi: 'F2 VI',
    F4V: 'F4 V',
    F7Vi: 'F7 VI',
    F3V: 'F3 V',
    G1V: 'G1 V',
    G9Vi: 'G9 VI',
    F3Iv: 'F3 IV',
    F9Vi: 'F9 VI',
    M9V: 'M9 V',
    K0Iv: 'K0 IV',
    F1Iv: 'F1 IV',
    G4Iv: 'G4 IV',
    F3Vi: 'F3 VI',
    K4Iv: 'K4 IV',
    G5Iv: 'G5 IV',
    G3Iv: 'G3 IV',
    G1Iv: 'G1 IV',
    K7Iv: 'K7 IV',
    G0Iv: 'G0 IV',
    K6Iv: 'K6 IV',
    K9Iv: 'K9 IV',
    G2Iv: 'G2 IV',
    F9Iv: 'F9 IV',
    F0Iv: 'F0 IV',
    K8Iv: 'K8 IV',
    G8Iv: 'G8 IV',
    F6Iv: 'F6 IV',
    F5Iv: 'F5 IV',
    A0: 'A0',
    A0Iv: 'A0IV',
    A0Iv2: 'A0IV2'
} as const;
export type GetUniverseStarsStarIdOkSpectralClassEnum = typeof GetUniverseStarsStarIdOkSpectralClassEnum[keyof typeof GetUniverseStarsStarIdOkSpectralClassEnum];


/**
 * Check if a given object implements the GetUniverseStarsStarIdOk interface.
 */
export function instanceOfGetUniverseStarsStarIdOk(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "age" in value;
    isInstance = isInstance && "luminosity" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "radius" in value;
    isInstance = isInstance && "solarSystemId" in value;
    isInstance = isInstance && "spectralClass" in value;
    isInstance = isInstance && "temperature" in value;
    isInstance = isInstance && "typeId" in value;

    return isInstance;
}

export function GetUniverseStarsStarIdOkFromJSON(json: any): GetUniverseStarsStarIdOk {
    return GetUniverseStarsStarIdOkFromJSONTyped(json, false);
}

export function GetUniverseStarsStarIdOkFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetUniverseStarsStarIdOk {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'age': json['age'],
        'luminosity': json['luminosity'],
        'name': json['name'],
        'radius': json['radius'],
        'solarSystemId': json['solar_system_id'],
        'spectralClass': json['spectral_class'],
        'temperature': json['temperature'],
        'typeId': json['type_id'],
    };
}

export function GetUniverseStarsStarIdOkToJSON(value?: GetUniverseStarsStarIdOk | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'age': value.age,
        'luminosity': value.luminosity,
        'name': value.name,
        'radius': value.radius,
        'solar_system_id': value.solarSystemId,
        'spectral_class': value.spectralClass,
        'temperature': value.temperature,
        'type_id': value.typeId,
    };
}

