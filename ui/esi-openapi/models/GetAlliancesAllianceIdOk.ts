/* tslint:disable */
/* eslint-disable */
/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.25
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 200 ok object
 * @export
 * @interface GetAlliancesAllianceIdOk
 */
export interface GetAlliancesAllianceIdOk {
    /**
     * ID of the corporation that created the alliance
     * @type {number}
     * @memberof GetAlliancesAllianceIdOk
     */
    creatorCorporationId: number;
    /**
     * ID of the character that created the alliance
     * @type {number}
     * @memberof GetAlliancesAllianceIdOk
     */
    creatorId: number;
    /**
     * date_founded string
     * @type {Date}
     * @memberof GetAlliancesAllianceIdOk
     */
    dateFounded: Date;
    /**
     * the executor corporation ID, if this alliance is not closed
     * @type {number}
     * @memberof GetAlliancesAllianceIdOk
     */
    executorCorporationId?: number;
    /**
     * Faction ID this alliance is fighting for, if this alliance is enlisted in factional warfare
     * @type {number}
     * @memberof GetAlliancesAllianceIdOk
     */
    factionId?: number;
    /**
     * the full name of the alliance
     * @type {string}
     * @memberof GetAlliancesAllianceIdOk
     */
    name: string;
    /**
     * the short name of the alliance
     * @type {string}
     * @memberof GetAlliancesAllianceIdOk
     */
    ticker: string;
}

/**
 * Check if a given object implements the GetAlliancesAllianceIdOk interface.
 */
export function instanceOfGetAlliancesAllianceIdOk(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "creatorCorporationId" in value;
    isInstance = isInstance && "creatorId" in value;
    isInstance = isInstance && "dateFounded" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "ticker" in value;

    return isInstance;
}

export function GetAlliancesAllianceIdOkFromJSON(json: any): GetAlliancesAllianceIdOk {
    return GetAlliancesAllianceIdOkFromJSONTyped(json, false);
}

export function GetAlliancesAllianceIdOkFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetAlliancesAllianceIdOk {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'creatorCorporationId': json['creator_corporation_id'],
        'creatorId': json['creator_id'],
        'dateFounded': (new Date(json['date_founded'])),
        'executorCorporationId': !exists(json, 'executor_corporation_id') ? undefined : json['executor_corporation_id'],
        'factionId': !exists(json, 'faction_id') ? undefined : json['faction_id'],
        'name': json['name'],
        'ticker': json['ticker'],
    };
}

export function GetAlliancesAllianceIdOkToJSON(value?: GetAlliancesAllianceIdOk | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'creator_corporation_id': value.creatorCorporationId,
        'creator_id': value.creatorId,
        'date_founded': (value.dateFounded.toISOString()),
        'executor_corporation_id': value.executorCorporationId,
        'faction_id': value.factionId,
        'name': value.name,
        'ticker': value.ticker,
    };
}

