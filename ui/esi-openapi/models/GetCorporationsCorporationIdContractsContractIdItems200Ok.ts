/* tslint:disable */
/* eslint-disable */
/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.25
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 200 ok object
 * @export
 * @interface GetCorporationsCorporationIdContractsContractIdItems200Ok
 */
export interface GetCorporationsCorporationIdContractsContractIdItems200Ok {
    /**
     * true if the contract issuer has submitted this item with the contract, false if the isser is asking for this item in the contract
     * @type {boolean}
     * @memberof GetCorporationsCorporationIdContractsContractIdItems200Ok
     */
    isIncluded: boolean;
    /**
     * is_singleton boolean
     * @type {boolean}
     * @memberof GetCorporationsCorporationIdContractsContractIdItems200Ok
     */
    isSingleton: boolean;
    /**
     * Number of items in the stack
     * @type {number}
     * @memberof GetCorporationsCorporationIdContractsContractIdItems200Ok
     */
    quantity: number;
    /**
     * -1 indicates that the item is a singleton (non-stackable). If the item happens to be a Blueprint, -1 is an Original and -2 is a Blueprint Copy
     * @type {number}
     * @memberof GetCorporationsCorporationIdContractsContractIdItems200Ok
     */
    rawQuantity?: number;
    /**
     * Unique ID for the item
     * @type {number}
     * @memberof GetCorporationsCorporationIdContractsContractIdItems200Ok
     */
    recordId: number;
    /**
     * Type ID for item
     * @type {number}
     * @memberof GetCorporationsCorporationIdContractsContractIdItems200Ok
     */
    typeId: number;
}

/**
 * Check if a given object implements the GetCorporationsCorporationIdContractsContractIdItems200Ok interface.
 */
export function instanceOfGetCorporationsCorporationIdContractsContractIdItems200Ok(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "isIncluded" in value;
    isInstance = isInstance && "isSingleton" in value;
    isInstance = isInstance && "quantity" in value;
    isInstance = isInstance && "recordId" in value;
    isInstance = isInstance && "typeId" in value;

    return isInstance;
}

export function GetCorporationsCorporationIdContractsContractIdItems200OkFromJSON(json: any): GetCorporationsCorporationIdContractsContractIdItems200Ok {
    return GetCorporationsCorporationIdContractsContractIdItems200OkFromJSONTyped(json, false);
}

export function GetCorporationsCorporationIdContractsContractIdItems200OkFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetCorporationsCorporationIdContractsContractIdItems200Ok {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'isIncluded': json['is_included'],
        'isSingleton': json['is_singleton'],
        'quantity': json['quantity'],
        'rawQuantity': !exists(json, 'raw_quantity') ? undefined : json['raw_quantity'],
        'recordId': json['record_id'],
        'typeId': json['type_id'],
    };
}

export function GetCorporationsCorporationIdContractsContractIdItems200OkToJSON(value?: GetCorporationsCorporationIdContractsContractIdItems200Ok | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'is_included': value.isIncluded,
        'is_singleton': value.isSingleton,
        'quantity': value.quantity,
        'raw_quantity': value.rawQuantity,
        'record_id': value.recordId,
        'type_id': value.typeId,
    };
}

