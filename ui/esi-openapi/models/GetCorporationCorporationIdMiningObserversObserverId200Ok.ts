/* tslint:disable */
/* eslint-disable */
/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.25
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 200 ok object
 * @export
 * @interface GetCorporationCorporationIdMiningObserversObserverId200Ok
 */
export interface GetCorporationCorporationIdMiningObserversObserverId200Ok {
    /**
     * The character that did the mining
     * @type {number}
     * @memberof GetCorporationCorporationIdMiningObserversObserverId200Ok
     */
    characterId: number;
    /**
     * last_updated string
     * @type {Date}
     * @memberof GetCorporationCorporationIdMiningObserversObserverId200Ok
     */
    lastUpdated: Date;
    /**
     * quantity integer
     * @type {number}
     * @memberof GetCorporationCorporationIdMiningObserversObserverId200Ok
     */
    quantity: number;
    /**
     * The corporation id of the character at the time data was recorded.
     * @type {number}
     * @memberof GetCorporationCorporationIdMiningObserversObserverId200Ok
     */
    recordedCorporationId: number;
    /**
     * type_id integer
     * @type {number}
     * @memberof GetCorporationCorporationIdMiningObserversObserverId200Ok
     */
    typeId: number;
}

/**
 * Check if a given object implements the GetCorporationCorporationIdMiningObserversObserverId200Ok interface.
 */
export function instanceOfGetCorporationCorporationIdMiningObserversObserverId200Ok(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "characterId" in value;
    isInstance = isInstance && "lastUpdated" in value;
    isInstance = isInstance && "quantity" in value;
    isInstance = isInstance && "recordedCorporationId" in value;
    isInstance = isInstance && "typeId" in value;

    return isInstance;
}

export function GetCorporationCorporationIdMiningObserversObserverId200OkFromJSON(json: any): GetCorporationCorporationIdMiningObserversObserverId200Ok {
    return GetCorporationCorporationIdMiningObserversObserverId200OkFromJSONTyped(json, false);
}

export function GetCorporationCorporationIdMiningObserversObserverId200OkFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetCorporationCorporationIdMiningObserversObserverId200Ok {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'characterId': json['character_id'],
        'lastUpdated': (new Date(json['last_updated'])),
        'quantity': json['quantity'],
        'recordedCorporationId': json['recorded_corporation_id'],
        'typeId': json['type_id'],
    };
}

export function GetCorporationCorporationIdMiningObserversObserverId200OkToJSON(value?: GetCorporationCorporationIdMiningObserversObserverId200Ok | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'character_id': value.characterId,
        'last_updated': (value.lastUpdated.toISOString().substr(0,10)),
        'quantity': value.quantity,
        'recorded_corporation_id': value.recordedCorporationId,
        'type_id': value.typeId,
    };
}

