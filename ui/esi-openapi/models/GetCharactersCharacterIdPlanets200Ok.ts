/* tslint:disable */
/* eslint-disable */
/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.25
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 200 ok object
 * @export
 * @interface GetCharactersCharacterIdPlanets200Ok
 */
export interface GetCharactersCharacterIdPlanets200Ok {
    /**
     * last_update string
     * @type {Date}
     * @memberof GetCharactersCharacterIdPlanets200Ok
     */
    lastUpdate: Date;
    /**
     * num_pins integer
     * @type {number}
     * @memberof GetCharactersCharacterIdPlanets200Ok
     */
    numPins: number;
    /**
     * owner_id integer
     * @type {number}
     * @memberof GetCharactersCharacterIdPlanets200Ok
     */
    ownerId: number;
    /**
     * planet_id integer
     * @type {number}
     * @memberof GetCharactersCharacterIdPlanets200Ok
     */
    planetId: number;
    /**
     * planet_type string
     * @type {string}
     * @memberof GetCharactersCharacterIdPlanets200Ok
     */
    planetType: GetCharactersCharacterIdPlanets200OkPlanetTypeEnum;
    /**
     * solar_system_id integer
     * @type {number}
     * @memberof GetCharactersCharacterIdPlanets200Ok
     */
    solarSystemId: number;
    /**
     * upgrade_level integer
     * @type {number}
     * @memberof GetCharactersCharacterIdPlanets200Ok
     */
    upgradeLevel: number;
}


/**
 * @export
 */
export const GetCharactersCharacterIdPlanets200OkPlanetTypeEnum = {
    Temperate: 'temperate',
    Barren: 'barren',
    Oceanic: 'oceanic',
    Ice: 'ice',
    Gas: 'gas',
    Lava: 'lava',
    Storm: 'storm',
    Plasma: 'plasma'
} as const;
export type GetCharactersCharacterIdPlanets200OkPlanetTypeEnum = typeof GetCharactersCharacterIdPlanets200OkPlanetTypeEnum[keyof typeof GetCharactersCharacterIdPlanets200OkPlanetTypeEnum];


/**
 * Check if a given object implements the GetCharactersCharacterIdPlanets200Ok interface.
 */
export function instanceOfGetCharactersCharacterIdPlanets200Ok(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "lastUpdate" in value;
    isInstance = isInstance && "numPins" in value;
    isInstance = isInstance && "ownerId" in value;
    isInstance = isInstance && "planetId" in value;
    isInstance = isInstance && "planetType" in value;
    isInstance = isInstance && "solarSystemId" in value;
    isInstance = isInstance && "upgradeLevel" in value;

    return isInstance;
}

export function GetCharactersCharacterIdPlanets200OkFromJSON(json: any): GetCharactersCharacterIdPlanets200Ok {
    return GetCharactersCharacterIdPlanets200OkFromJSONTyped(json, false);
}

export function GetCharactersCharacterIdPlanets200OkFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetCharactersCharacterIdPlanets200Ok {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'lastUpdate': (new Date(json['last_update'])),
        'numPins': json['num_pins'],
        'ownerId': json['owner_id'],
        'planetId': json['planet_id'],
        'planetType': json['planet_type'],
        'solarSystemId': json['solar_system_id'],
        'upgradeLevel': json['upgrade_level'],
    };
}

export function GetCharactersCharacterIdPlanets200OkToJSON(value?: GetCharactersCharacterIdPlanets200Ok | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'last_update': (value.lastUpdate.toISOString()),
        'num_pins': value.numPins,
        'owner_id': value.ownerId,
        'planet_id': value.planetId,
        'planet_type': value.planetType,
        'solar_system_id': value.solarSystemId,
        'upgrade_level': value.upgradeLevel,
    };
}

