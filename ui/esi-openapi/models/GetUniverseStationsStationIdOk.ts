/* tslint:disable */
/* eslint-disable */
/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.25
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GetUniverseStationsStationIdPosition } from './GetUniverseStationsStationIdPosition';
import {
    GetUniverseStationsStationIdPositionFromJSON,
    GetUniverseStationsStationIdPositionFromJSONTyped,
    GetUniverseStationsStationIdPositionToJSON,
} from './GetUniverseStationsStationIdPosition';

/**
 * 200 ok object
 * @export
 * @interface GetUniverseStationsStationIdOk
 */
export interface GetUniverseStationsStationIdOk {
    /**
     * max_dockable_ship_volume number
     * @type {number}
     * @memberof GetUniverseStationsStationIdOk
     */
    maxDockableShipVolume: number;
    /**
     * name string
     * @type {string}
     * @memberof GetUniverseStationsStationIdOk
     */
    name: string;
    /**
     * office_rental_cost number
     * @type {number}
     * @memberof GetUniverseStationsStationIdOk
     */
    officeRentalCost: number;
    /**
     * ID of the corporation that controls this station
     * @type {number}
     * @memberof GetUniverseStationsStationIdOk
     */
    owner?: number;
    /**
     * 
     * @type {GetUniverseStationsStationIdPosition}
     * @memberof GetUniverseStationsStationIdOk
     */
    position: GetUniverseStationsStationIdPosition;
    /**
     * race_id integer
     * @type {number}
     * @memberof GetUniverseStationsStationIdOk
     */
    raceId?: number;
    /**
     * reprocessing_efficiency number
     * @type {number}
     * @memberof GetUniverseStationsStationIdOk
     */
    reprocessingEfficiency: number;
    /**
     * reprocessing_stations_take number
     * @type {number}
     * @memberof GetUniverseStationsStationIdOk
     */
    reprocessingStationsTake: number;
    /**
     * services array
     * @type {Array<string>}
     * @memberof GetUniverseStationsStationIdOk
     */
    services: Array<GetUniverseStationsStationIdOkServicesEnum>;
    /**
     * station_id integer
     * @type {number}
     * @memberof GetUniverseStationsStationIdOk
     */
    stationId: number;
    /**
     * The solar system this station is in
     * @type {number}
     * @memberof GetUniverseStationsStationIdOk
     */
    systemId: number;
    /**
     * type_id integer
     * @type {number}
     * @memberof GetUniverseStationsStationIdOk
     */
    typeId: number;
}


/**
 * @export
 */
export const GetUniverseStationsStationIdOkServicesEnum = {
    BountyMissions: 'bounty-missions',
    AssasinationMissions: 'assasination-missions',
    CourierMissions: 'courier-missions',
    Interbus: 'interbus',
    ReprocessingPlant: 'reprocessing-plant',
    Refinery: 'refinery',
    Market: 'market',
    BlackMarket: 'black-market',
    StockExchange: 'stock-exchange',
    Cloning: 'cloning',
    Surgery: 'surgery',
    DnaTherapy: 'dna-therapy',
    RepairFacilities: 'repair-facilities',
    Factory: 'factory',
    Labratory: 'labratory',
    Gambling: 'gambling',
    Fitting: 'fitting',
    Paintshop: 'paintshop',
    News: 'news',
    Storage: 'storage',
    Insurance: 'insurance',
    Docking: 'docking',
    OfficeRental: 'office-rental',
    JumpCloneFacility: 'jump-clone-facility',
    LoyaltyPointStore: 'loyalty-point-store',
    NavyOffices: 'navy-offices',
    SecurityOffices: 'security-offices'
} as const;
export type GetUniverseStationsStationIdOkServicesEnum = typeof GetUniverseStationsStationIdOkServicesEnum[keyof typeof GetUniverseStationsStationIdOkServicesEnum];


/**
 * Check if a given object implements the GetUniverseStationsStationIdOk interface.
 */
export function instanceOfGetUniverseStationsStationIdOk(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "maxDockableShipVolume" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "officeRentalCost" in value;
    isInstance = isInstance && "position" in value;
    isInstance = isInstance && "reprocessingEfficiency" in value;
    isInstance = isInstance && "reprocessingStationsTake" in value;
    isInstance = isInstance && "services" in value;
    isInstance = isInstance && "stationId" in value;
    isInstance = isInstance && "systemId" in value;
    isInstance = isInstance && "typeId" in value;

    return isInstance;
}

export function GetUniverseStationsStationIdOkFromJSON(json: any): GetUniverseStationsStationIdOk {
    return GetUniverseStationsStationIdOkFromJSONTyped(json, false);
}

export function GetUniverseStationsStationIdOkFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetUniverseStationsStationIdOk {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'maxDockableShipVolume': json['max_dockable_ship_volume'],
        'name': json['name'],
        'officeRentalCost': json['office_rental_cost'],
        'owner': !exists(json, 'owner') ? undefined : json['owner'],
        'position': GetUniverseStationsStationIdPositionFromJSON(json['position']),
        'raceId': !exists(json, 'race_id') ? undefined : json['race_id'],
        'reprocessingEfficiency': json['reprocessing_efficiency'],
        'reprocessingStationsTake': json['reprocessing_stations_take'],
        'services': json['services'],
        'stationId': json['station_id'],
        'systemId': json['system_id'],
        'typeId': json['type_id'],
    };
}

export function GetUniverseStationsStationIdOkToJSON(value?: GetUniverseStationsStationIdOk | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'max_dockable_ship_volume': value.maxDockableShipVolume,
        'name': value.name,
        'office_rental_cost': value.officeRentalCost,
        'owner': value.owner,
        'position': GetUniverseStationsStationIdPositionToJSON(value.position),
        'race_id': value.raceId,
        'reprocessing_efficiency': value.reprocessingEfficiency,
        'reprocessing_stations_take': value.reprocessingStationsTake,
        'services': value.services,
        'station_id': value.stationId,
        'system_id': value.systemId,
        'type_id': value.typeId,
    };
}

