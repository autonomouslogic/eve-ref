/* tslint:disable */
/* eslint-disable */
/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.25
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 200 ok object
 * @export
 * @interface GetMarketsRegionIdOrders200Ok
 */
export interface GetMarketsRegionIdOrders200Ok {
    /**
     * duration integer
     * @type {number}
     * @memberof GetMarketsRegionIdOrders200Ok
     */
    duration: number;
    /**
     * is_buy_order boolean
     * @type {boolean}
     * @memberof GetMarketsRegionIdOrders200Ok
     */
    isBuyOrder: boolean;
    /**
     * issued string
     * @type {Date}
     * @memberof GetMarketsRegionIdOrders200Ok
     */
    issued: Date;
    /**
     * location_id integer
     * @type {number}
     * @memberof GetMarketsRegionIdOrders200Ok
     */
    locationId: number;
    /**
     * min_volume integer
     * @type {number}
     * @memberof GetMarketsRegionIdOrders200Ok
     */
    minVolume: number;
    /**
     * order_id integer
     * @type {number}
     * @memberof GetMarketsRegionIdOrders200Ok
     */
    orderId: number;
    /**
     * price number
     * @type {number}
     * @memberof GetMarketsRegionIdOrders200Ok
     */
    price: number;
    /**
     * range string
     * @type {string}
     * @memberof GetMarketsRegionIdOrders200Ok
     */
    range: GetMarketsRegionIdOrders200OkRangeEnum;
    /**
     * The solar system this order was placed
     * @type {number}
     * @memberof GetMarketsRegionIdOrders200Ok
     */
    systemId: number;
    /**
     * type_id integer
     * @type {number}
     * @memberof GetMarketsRegionIdOrders200Ok
     */
    typeId: number;
    /**
     * volume_remain integer
     * @type {number}
     * @memberof GetMarketsRegionIdOrders200Ok
     */
    volumeRemain: number;
    /**
     * volume_total integer
     * @type {number}
     * @memberof GetMarketsRegionIdOrders200Ok
     */
    volumeTotal: number;
}


/**
 * @export
 */
export const GetMarketsRegionIdOrders200OkRangeEnum = {
    Station: 'station',
    Region: 'region',
    Solarsystem: 'solarsystem',
    _1: '1',
    _2: '2',
    _3: '3',
    _4: '4',
    _5: '5',
    _10: '10',
    _20: '20',
    _30: '30',
    _40: '40'
} as const;
export type GetMarketsRegionIdOrders200OkRangeEnum = typeof GetMarketsRegionIdOrders200OkRangeEnum[keyof typeof GetMarketsRegionIdOrders200OkRangeEnum];


/**
 * Check if a given object implements the GetMarketsRegionIdOrders200Ok interface.
 */
export function instanceOfGetMarketsRegionIdOrders200Ok(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "duration" in value;
    isInstance = isInstance && "isBuyOrder" in value;
    isInstance = isInstance && "issued" in value;
    isInstance = isInstance && "locationId" in value;
    isInstance = isInstance && "minVolume" in value;
    isInstance = isInstance && "orderId" in value;
    isInstance = isInstance && "price" in value;
    isInstance = isInstance && "range" in value;
    isInstance = isInstance && "systemId" in value;
    isInstance = isInstance && "typeId" in value;
    isInstance = isInstance && "volumeRemain" in value;
    isInstance = isInstance && "volumeTotal" in value;

    return isInstance;
}

export function GetMarketsRegionIdOrders200OkFromJSON(json: any): GetMarketsRegionIdOrders200Ok {
    return GetMarketsRegionIdOrders200OkFromJSONTyped(json, false);
}

export function GetMarketsRegionIdOrders200OkFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetMarketsRegionIdOrders200Ok {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'duration': json['duration'],
        'isBuyOrder': json['is_buy_order'],
        'issued': (new Date(json['issued'])),
        'locationId': json['location_id'],
        'minVolume': json['min_volume'],
        'orderId': json['order_id'],
        'price': json['price'],
        'range': json['range'],
        'systemId': json['system_id'],
        'typeId': json['type_id'],
        'volumeRemain': json['volume_remain'],
        'volumeTotal': json['volume_total'],
    };
}

export function GetMarketsRegionIdOrders200OkToJSON(value?: GetMarketsRegionIdOrders200Ok | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'duration': value.duration,
        'is_buy_order': value.isBuyOrder,
        'issued': (value.issued.toISOString()),
        'location_id': value.locationId,
        'min_volume': value.minVolume,
        'order_id': value.orderId,
        'price': value.price,
        'range': value.range,
        'system_id': value.systemId,
        'type_id': value.typeId,
        'volume_remain': value.volumeRemain,
        'volume_total': value.volumeTotal,
    };
}

