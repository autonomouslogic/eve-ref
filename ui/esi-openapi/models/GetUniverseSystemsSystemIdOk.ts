/* tslint:disable */
/* eslint-disable */
/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.25
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GetUniverseSystemsSystemIdPlanet } from './GetUniverseSystemsSystemIdPlanet';
import {
    GetUniverseSystemsSystemIdPlanetFromJSON,
    GetUniverseSystemsSystemIdPlanetFromJSONTyped,
    GetUniverseSystemsSystemIdPlanetToJSON,
} from './GetUniverseSystemsSystemIdPlanet';
import type { GetUniverseSystemsSystemIdPosition } from './GetUniverseSystemsSystemIdPosition';
import {
    GetUniverseSystemsSystemIdPositionFromJSON,
    GetUniverseSystemsSystemIdPositionFromJSONTyped,
    GetUniverseSystemsSystemIdPositionToJSON,
} from './GetUniverseSystemsSystemIdPosition';

/**
 * 200 ok object
 * @export
 * @interface GetUniverseSystemsSystemIdOk
 */
export interface GetUniverseSystemsSystemIdOk {
    /**
     * The constellation this solar system is in
     * @type {number}
     * @memberof GetUniverseSystemsSystemIdOk
     */
    constellationId: number;
    /**
     * name string
     * @type {string}
     * @memberof GetUniverseSystemsSystemIdOk
     */
    name: string;
    /**
     * planets array
     * @type {Array<GetUniverseSystemsSystemIdPlanet>}
     * @memberof GetUniverseSystemsSystemIdOk
     */
    planets?: Array<GetUniverseSystemsSystemIdPlanet>;
    /**
     * 
     * @type {GetUniverseSystemsSystemIdPosition}
     * @memberof GetUniverseSystemsSystemIdOk
     */
    position: GetUniverseSystemsSystemIdPosition;
    /**
     * security_class string
     * @type {string}
     * @memberof GetUniverseSystemsSystemIdOk
     */
    securityClass?: string;
    /**
     * security_status number
     * @type {number}
     * @memberof GetUniverseSystemsSystemIdOk
     */
    securityStatus: number;
    /**
     * star_id integer
     * @type {number}
     * @memberof GetUniverseSystemsSystemIdOk
     */
    starId?: number;
    /**
     * stargates array
     * @type {Array<number>}
     * @memberof GetUniverseSystemsSystemIdOk
     */
    stargates?: Array<number>;
    /**
     * stations array
     * @type {Array<number>}
     * @memberof GetUniverseSystemsSystemIdOk
     */
    stations?: Array<number>;
    /**
     * system_id integer
     * @type {number}
     * @memberof GetUniverseSystemsSystemIdOk
     */
    systemId: number;
}

/**
 * Check if a given object implements the GetUniverseSystemsSystemIdOk interface.
 */
export function instanceOfGetUniverseSystemsSystemIdOk(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "constellationId" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "position" in value;
    isInstance = isInstance && "securityStatus" in value;
    isInstance = isInstance && "systemId" in value;

    return isInstance;
}

export function GetUniverseSystemsSystemIdOkFromJSON(json: any): GetUniverseSystemsSystemIdOk {
    return GetUniverseSystemsSystemIdOkFromJSONTyped(json, false);
}

export function GetUniverseSystemsSystemIdOkFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetUniverseSystemsSystemIdOk {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'constellationId': json['constellation_id'],
        'name': json['name'],
        'planets': !exists(json, 'planets') ? undefined : ((json['planets'] as Array<any>).map(GetUniverseSystemsSystemIdPlanetFromJSON)),
        'position': GetUniverseSystemsSystemIdPositionFromJSON(json['position']),
        'securityClass': !exists(json, 'security_class') ? undefined : json['security_class'],
        'securityStatus': json['security_status'],
        'starId': !exists(json, 'star_id') ? undefined : json['star_id'],
        'stargates': !exists(json, 'stargates') ? undefined : json['stargates'],
        'stations': !exists(json, 'stations') ? undefined : json['stations'],
        'systemId': json['system_id'],
    };
}

export function GetUniverseSystemsSystemIdOkToJSON(value?: GetUniverseSystemsSystemIdOk | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'constellation_id': value.constellationId,
        'name': value.name,
        'planets': value.planets === undefined ? undefined : ((value.planets as Array<any>).map(GetUniverseSystemsSystemIdPlanetToJSON)),
        'position': GetUniverseSystemsSystemIdPositionToJSON(value.position),
        'security_class': value.securityClass,
        'security_status': value.securityStatus,
        'star_id': value.starId,
        'stargates': value.stargates,
        'stations': value.stations,
        'system_id': value.systemId,
    };
}

