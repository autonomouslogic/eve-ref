/* tslint:disable */
/* eslint-disable */
/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.25
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PostCharactersCharacterIdFittingsItem } from './PostCharactersCharacterIdFittingsItem';
import {
    PostCharactersCharacterIdFittingsItemFromJSON,
    PostCharactersCharacterIdFittingsItemFromJSONTyped,
    PostCharactersCharacterIdFittingsItemToJSON,
} from './PostCharactersCharacterIdFittingsItem';

/**
 * fitting object
 * @export
 * @interface PostCharactersCharacterIdFittingsFitting
 */
export interface PostCharactersCharacterIdFittingsFitting {
    /**
     * description string
     * @type {string}
     * @memberof PostCharactersCharacterIdFittingsFitting
     */
    description: string;
    /**
     * items array
     * @type {Array<PostCharactersCharacterIdFittingsItem>}
     * @memberof PostCharactersCharacterIdFittingsFitting
     */
    items: Array<PostCharactersCharacterIdFittingsItem>;
    /**
     * name string
     * @type {string}
     * @memberof PostCharactersCharacterIdFittingsFitting
     */
    name: string;
    /**
     * ship_type_id integer
     * @type {number}
     * @memberof PostCharactersCharacterIdFittingsFitting
     */
    shipTypeId: number;
}

/**
 * Check if a given object implements the PostCharactersCharacterIdFittingsFitting interface.
 */
export function instanceOfPostCharactersCharacterIdFittingsFitting(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "items" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "shipTypeId" in value;

    return isInstance;
}

export function PostCharactersCharacterIdFittingsFittingFromJSON(json: any): PostCharactersCharacterIdFittingsFitting {
    return PostCharactersCharacterIdFittingsFittingFromJSONTyped(json, false);
}

export function PostCharactersCharacterIdFittingsFittingFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostCharactersCharacterIdFittingsFitting {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': json['description'],
        'items': ((json['items'] as Array<any>).map(PostCharactersCharacterIdFittingsItemFromJSON)),
        'name': json['name'],
        'shipTypeId': json['ship_type_id'],
    };
}

export function PostCharactersCharacterIdFittingsFittingToJSON(value?: PostCharactersCharacterIdFittingsFitting | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'items': ((value.items as Array<any>).map(PostCharactersCharacterIdFittingsItemToJSON)),
        'name': value.name,
        'ship_type_id': value.shipTypeId,
    };
}

