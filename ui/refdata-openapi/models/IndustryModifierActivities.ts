/* tslint:disable */
/* eslint-disable */
/**
 * EVE Ref Reference Data for EVE Online
 * This spec should be considered unstable and subject to change at any time.
 *
 * The version of the OpenAPI document: dev
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * These are the type IDs of the engineering rigs which affect this type in some way, indexed by activity and bonus type. This is added by EVE Ref.
 * @export
 * @interface IndustryModifierActivities
 */
export interface IndustryModifierActivities {
    /**
     * List of affected categories or groups when doing copying.
     * @type {Array<number>}
     * @memberof IndustryModifierActivities
     */
    copying?: Array<number>;
    /**
     * List of affected categories or groups when doing invention.
     * @type {Array<number>}
     * @memberof IndustryModifierActivities
     */
    invention?: Array<number>;
    /**
     * List of affected categories or groups when doing manufacturing.
     * @type {Array<number>}
     * @memberof IndustryModifierActivities
     */
    manufacturing?: Array<number>;
    /**
     * List of affected categories or groups when doing reaction.
     * @type {Array<number>}
     * @memberof IndustryModifierActivities
     */
    reaction?: Array<number>;
    /**
     * List of affected categories or groups when doing material efficiency research.
     * @type {Array<number>}
     * @memberof IndustryModifierActivities
     */
    researchMaterial?: Array<number>;
    /**
     * List of affected categories or groups when doing time efficiency research.
     * @type {Array<number>}
     * @memberof IndustryModifierActivities
     */
    researchTime?: Array<number>;
}

/**
 * Check if a given object implements the IndustryModifierActivities interface.
 */
export function instanceOfIndustryModifierActivities(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function IndustryModifierActivitiesFromJSON(json: any): IndustryModifierActivities {
    return IndustryModifierActivitiesFromJSONTyped(json, false);
}

export function IndustryModifierActivitiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): IndustryModifierActivities {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'copying': !exists(json, 'copying') ? undefined : json['copying'],
        'invention': !exists(json, 'invention') ? undefined : json['invention'],
        'manufacturing': !exists(json, 'manufacturing') ? undefined : json['manufacturing'],
        'reaction': !exists(json, 'reaction') ? undefined : json['reaction'],
        'researchMaterial': !exists(json, 'research_material') ? undefined : json['research_material'],
        'researchTime': !exists(json, 'research_time') ? undefined : json['research_time'],
    };
}

export function IndustryModifierActivitiesToJSON(value?: IndustryModifierActivities | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'copying': value.copying,
        'invention': value.invention,
        'manufacturing': value.manufacturing,
        'reaction': value.reaction,
        'research_material': value.researchMaterial,
        'research_time': value.researchTime,
    };
}

