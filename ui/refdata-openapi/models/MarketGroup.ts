/* tslint:disable */
/* eslint-disable */
/**
 * EVE Ref Reference Data for EVE Online
 * This spec should be considered unstable and subject to change at any time.
 *
 * The version of the OpenAPI document: dev
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A market group
 * @export
 * @interface MarketGroup
 */
export interface MarketGroup {
    /**
     * The market group IDs which are direct children of this group. This is added by EVE Ref.
     * @type {Array<number>}
     * @memberof MarketGroup
     */
    childMarketGroupIds?: Array<number>;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof MarketGroup
     */
    description?: { [key: string]: string; };
    /**
     * 
     * @type {boolean}
     * @memberof MarketGroup
     */
    hasTypes?: boolean;
    /**
     * 
     * @type {number}
     * @memberof MarketGroup
     */
    iconId?: number;
    /**
     * 
     * @type {number}
     * @memberof MarketGroup
     */
    marketGroupId?: number;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof MarketGroup
     */
    name?: { [key: string]: string; };
    /**
     * 
     * @type {number}
     * @memberof MarketGroup
     */
    parentGroupId?: number;
    /**
     * The type IDs in this market group. This is added by EVE Ref.
     * @type {Array<number>}
     * @memberof MarketGroup
     */
    typeIds?: Array<number>;
}

/**
 * Check if a given object implements the MarketGroup interface.
 */
export function instanceOfMarketGroup(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MarketGroupFromJSON(json: any): MarketGroup {
    return MarketGroupFromJSONTyped(json, false);
}

export function MarketGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): MarketGroup {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'childMarketGroupIds': !exists(json, 'child_market_group_ids') ? undefined : json['child_market_group_ids'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'hasTypes': !exists(json, 'has_types') ? undefined : json['has_types'],
        'iconId': !exists(json, 'icon_id') ? undefined : json['icon_id'],
        'marketGroupId': !exists(json, 'market_group_id') ? undefined : json['market_group_id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'parentGroupId': !exists(json, 'parent_group_id') ? undefined : json['parent_group_id'],
        'typeIds': !exists(json, 'type_ids') ? undefined : json['type_ids'],
    };
}

export function MarketGroupToJSON(value?: MarketGroup | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'child_market_group_ids': value.childMarketGroupIds,
        'description': value.description,
        'has_types': value.hasTypes,
        'icon_id': value.iconId,
        'market_group_id': value.marketGroupId,
        'name': value.name,
        'parent_group_id': value.parentGroupId,
        'type_ids': value.typeIds,
    };
}

