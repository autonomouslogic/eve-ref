/* tslint:disable */
/* eslint-disable */
/**
 * EVE Ref Reference Data for EVE Online
 * This spec should be considered unstable and subject to change at any time.
 *
 * The version of the OpenAPI document: dev
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Type traits. First key is type ID granting the bonus. Second key is the `important` from the original array. This is represented as an array in the SDE, but EVE Ref converts it to a map.
 * @export
 * @interface TraitBonus
 */
export interface TraitBonus {
    /**
     * 
     * @type {number}
     * @memberof TraitBonus
     */
    bonus?: number;
    /**
     * The key is the language code.
     * @type {{ [key: string]: string; }}
     * @memberof TraitBonus
     */
    bonusText?: { [key: string]: string; };
    /**
     * 
     * @type {number}
     * @memberof TraitBonus
     */
    importance?: number;
    /**
     * 
     * @type {boolean}
     * @memberof TraitBonus
     */
    isPositive?: boolean;
    /**
     * 
     * @type {number}
     * @memberof TraitBonus
     */
    unitId?: number;
}

/**
 * Check if a given object implements the TraitBonus interface.
 */
export function instanceOfTraitBonus(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TraitBonusFromJSON(json: any): TraitBonus {
    return TraitBonusFromJSONTyped(json, false);
}

export function TraitBonusFromJSONTyped(json: any, ignoreDiscriminator: boolean): TraitBonus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bonus': !exists(json, 'bonus') ? undefined : json['bonus'],
        'bonusText': !exists(json, 'bonus_text') ? undefined : json['bonus_text'],
        'importance': !exists(json, 'importance') ? undefined : json['importance'],
        'isPositive': !exists(json, 'is_positive') ? undefined : json['is_positive'],
        'unitId': !exists(json, 'unit_id') ? undefined : json['unit_id'],
    };
}

export function TraitBonusToJSON(value?: TraitBonus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bonus': value.bonus,
        'bonus_text': value.bonusText,
        'importance': value.importance,
        'is_positive': value.isPositive,
        'unit_id': value.unitId,
    };
}

