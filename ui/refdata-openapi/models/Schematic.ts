/* tslint:disable */
/* eslint-disable */
/**
 * EVE Ref Reference Data for EVE Online
 * This spec should be considered unstable and subject to change at any time.
 *
 * The version of the OpenAPI document: dev
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BlueprintMaterial } from './BlueprintMaterial';
import {
    BlueprintMaterialFromJSON,
    BlueprintMaterialFromJSONTyped,
    BlueprintMaterialToJSON,
} from './BlueprintMaterial';

/**
 * 
 * @export
 * @interface Schematic
 */
export interface Schematic {
    /**
     * 
     * @type {number}
     * @memberof Schematic
     */
    cycleTime?: number;
    /**
     * This is called 'types' in the SDE, but EVE Ref converts it to 'materials' and 'products' to be consistent with blueprints.
     * @type {{ [key: string]: BlueprintMaterial; }}
     * @memberof Schematic
     */
    materials?: { [key: string]: BlueprintMaterial; };
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof Schematic
     */
    name?: { [key: string]: string; };
    /**
     * 
     * @type {Array<number>}
     * @memberof Schematic
     */
    pinTypeIds?: Array<number>;
    /**
     * This is called 'types' in the SDE, but EVE Ref converts it to 'materials' and 'products' to be consistent with blueprints.
     * @type {{ [key: string]: BlueprintMaterial; }}
     * @memberof Schematic
     */
    products?: { [key: string]: BlueprintMaterial; };
    /**
     * 
     * @type {number}
     * @memberof Schematic
     */
    schematicId?: number;
}

/**
 * Check if a given object implements the Schematic interface.
 */
export function instanceOfSchematic(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SchematicFromJSON(json: any): Schematic {
    return SchematicFromJSONTyped(json, false);
}

export function SchematicFromJSONTyped(json: any, ignoreDiscriminator: boolean): Schematic {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cycleTime': !exists(json, 'cycle_time') ? undefined : json['cycle_time'],
        'materials': !exists(json, 'materials') ? undefined : (mapValues(json['materials'], BlueprintMaterialFromJSON)),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'pinTypeIds': !exists(json, 'pin_type_ids') ? undefined : json['pin_type_ids'],
        'products': !exists(json, 'products') ? undefined : (mapValues(json['products'], BlueprintMaterialFromJSON)),
        'schematicId': !exists(json, 'schematic_id') ? undefined : json['schematic_id'],
    };
}

export function SchematicToJSON(value?: Schematic | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cycle_time': value.cycleTime,
        'materials': value.materials === undefined ? undefined : (mapValues(value.materials, BlueprintMaterialToJSON)),
        'name': value.name,
        'pin_type_ids': value.pinTypeIds,
        'products': value.products === undefined ? undefined : (mapValues(value.products, BlueprintMaterialToJSON)),
        'schematic_id': value.schematicId,
    };
}

