/* tslint:disable */
/* eslint-disable */
/**
 * EVE Ref Reference Data for EVE Online
 * This spec should be considered unstable and subject to change at any time.
 *
 * The version of the OpenAPI document: dev
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Details a material used in a blueprint. This is added by EVE Ref.
 * @export
 * @interface UsedInBlueprint
 */
export interface UsedInBlueprint {
    /**
     * The material type ID.
     * @type {number}
     * @memberof UsedInBlueprint
     */
    materialTypeId?: number;
    /**
     * The activity this material is used in.
     * @type {string}
     * @memberof UsedInBlueprint
     */
    activity?: string;
    /**
     * The quantity.
     * @type {number}
     * @memberof UsedInBlueprint
     */
    quantity?: number;
}

/**
 * Check if a given object implements the UsedInBlueprint interface.
 */
export function instanceOfUsedInBlueprint(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UsedInBlueprintFromJSON(json: any): UsedInBlueprint {
    return UsedInBlueprintFromJSONTyped(json, false);
}

export function UsedInBlueprintFromJSONTyped(json: any, ignoreDiscriminator: boolean): UsedInBlueprint {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'materialTypeId': !exists(json, 'material_type_id') ? undefined : json['material_type_id'],
        'activity': !exists(json, 'activity') ? undefined : json['activity'],
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
    };
}

export function UsedInBlueprintToJSON(value?: UsedInBlueprint | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'material_type_id': value.materialTypeId,
        'activity': value.activity,
        'quantity': value.quantity,
    };
}

