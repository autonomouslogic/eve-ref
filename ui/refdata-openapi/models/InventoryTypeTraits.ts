/* tslint:disable */
/* eslint-disable */
/**
 * EVE Ref Reference Data for EVE Online
 * This spec should be considered unstable and subject to change at any time.
 *
 * The version of the OpenAPI document: dev
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TraitBonus } from './TraitBonus';
import {
    TraitBonusFromJSON,
    TraitBonusFromJSONTyped,
    TraitBonusToJSON,
} from './TraitBonus';

/**
 * 
 * @export
 * @interface InventoryTypeTraits
 */
export interface InventoryTypeTraits {
    /**
     * Misc bonuses indexed by 'importance' from the original array. This is represented as an array in the SDE, but EVE Ref converts it to a map.
     * @type {{ [key: string]: TraitBonus; }}
     * @memberof InventoryTypeTraits
     */
    miscBonuses?: { [key: string]: TraitBonus; };
    /**
     * Role bonuses indexed by 'importance' from the original array. This is represented as an array in the SDE, but EVE Ref converts it to a map.
     * @type {{ [key: string]: TraitBonus; }}
     * @memberof InventoryTypeTraits
     */
    roleBonuses?: { [key: string]: TraitBonus; };
    /**
     * Type traits. First key is type ID granting the bonus. Second key is the `important` from the original array. This is represented as an array in the SDE, but EVE Ref converts it to a map.
     * @type {{ [key: string]: { [key: string]: TraitBonus; }; }}
     * @memberof InventoryTypeTraits
     */
    types?: { [key: string]: { [key: string]: TraitBonus; }; };
    /**
     * 
     * @type {number}
     * @memberof InventoryTypeTraits
     */
    iconId?: number;
}

/**
 * Check if a given object implements the InventoryTypeTraits interface.
 */
export function instanceOfInventoryTypeTraits(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InventoryTypeTraitsFromJSON(json: any): InventoryTypeTraits {
    return InventoryTypeTraitsFromJSONTyped(json, false);
}

export function InventoryTypeTraitsFromJSONTyped(json: any, ignoreDiscriminator: boolean): InventoryTypeTraits {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'miscBonuses': !exists(json, 'misc_bonuses') ? undefined : (mapValues(json['misc_bonuses'], TraitBonusFromJSON)),
        'roleBonuses': !exists(json, 'role_bonuses') ? undefined : (mapValues(json['role_bonuses'], TraitBonusFromJSON)),
        'types': !exists(json, 'types') ? undefined : json['types'],
        'iconId': !exists(json, 'icon_id') ? undefined : json['icon_id'],
    };
}

export function InventoryTypeTraitsToJSON(value?: InventoryTypeTraits | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'misc_bonuses': value.miscBonuses === undefined ? undefined : (mapValues(value.miscBonuses, TraitBonusToJSON)),
        'role_bonuses': value.roleBonuses === undefined ? undefined : (mapValues(value.roleBonuses, TraitBonusToJSON)),
        'types': value.types,
        'icon_id': value.iconId,
    };
}

