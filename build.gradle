plugins {
	id "java"
	id "org.jetbrains.kotlin.jvm" version "1.8.10"
	id "idea"
	id "application"
	id "jacoco"
	id "org.danilopianini.git-sensitive-semantic-versioning-gradle-plugin" version "1.1.4"
	id "io.freefair.lombok" version "8.0.0"
	id "com.diffplug.spotless" version "6.17.0"
	id "org.openapi.generator" version "6.3.0"
}

group "com.autonomouslogic.everef"

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

ext {
	mainClassName = "com.autonomouslogic.everef.Main"
}

repositories {
	mavenCentral()
}

dependencies {
	annotationProcessor "com.google.dagger:dagger-compiler:2.45"
	implementation "com.google.dagger:dagger:2.45"
	implementation "com.google.guava:guava:31.1-jre"
	implementation "org.apache.logging.log4j:log4j-api:2.20.0"
	implementation "org.apache.logging.log4j:log4j-core:2.20.0"
	implementation "org.apache.logging.log4j:log4j-layout-template-json:2.20.0"
	implementation "org.apache.logging.log4j:log4j-slf4j2-impl:2.20.0"
	implementation "io.reactivex.rxjava3:rxjava:3.1.6"
	implementation "com.autonomouslogic.commons:commons-java:1.6.1"
	implementation "de.neuland-bfi:pug4j:2.0.6"
	implementation "software.amazon.awssdk:s3:2.20.28"
	implementation "com.fasterxml.jackson.core:jackson-annotations:2.14.2"
	implementation "com.fasterxml.jackson.core:jackson-core:2.14.2"
	implementation "com.fasterxml.jackson.core:jackson-databind:2.14.2"
	implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.2"
	implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.15.0-rc1"
	implementation "org.apache.commons:commons-pool2:2.11.1"
	implementation "org.apache.commons:commons-compress:1.22"
	implementation "com.h2database:h2-mvstore:2.1.214"
	implementation "com.squareup.okhttp3:okhttp:4.10.0"
	implementation "org.apache.commons:commons-csv:1.10.0"

	testAnnotationProcessor "com.google.dagger:dagger-compiler:2.45"
	testImplementation "com.google.dagger:dagger:2.45"
	testImplementation "org.junit.jupiter:junit-jupiter:5.9.2"
	testImplementation "org.junit.jupiter:junit-jupiter-params:5.9.2"
	testImplementation "org.junit-pioneer:junit-pioneer:2.0.0"
	testImplementation "org.mockito:mockito-junit-jupiter:5.2.0"
	testImplementation "org.jsoup:jsoup:1.15.4"
	testImplementation "com.github.gmazzo:okhttp-mock:1.5.0"
}

java {
	withJavadocJar()
	withSourcesJar()
}

def esiOpenApiPackage = ""
openApiGenerate {
	generatorName = "kotlin"
	inputSpec = "$rootDir/lib/esi-latest.json"
	packageName = "${group}.openapi.esi"
	configOptions = [
		library: "jvm-okhttp4",
		serializationLibrary: "jackson",
		dateLibrary: "java8"
	]
}
sourceSets.main.java.srcDirs += ["build/generate-resources/main/src/main/kotlin"]
compileKotlin.dependsOn(tasks.openApiGenerate)
compileJava.dependsOn(tasks.openApiGenerate)
sourcesJar.dependsOn(tasks.openApiGenerate)

test {
	useJUnitPlatform()

	testLogging {
		events = [ "FAILED", "PASSED", "SKIPPED" ]
		showExceptions = true
		exceptionFormat = "FULL"
		showExceptions = true
		showCauses = true
		showStackTraces = true
	}

	environment "LOG_LEVEL", "debug"

	// https://junit-pioneer.org/docs/environment-variables/#warnings-for-reflective-access
	jvmArgs("--add-opens", "java.base/java.util=ALL-UNNAMED", "--add-opens", "java.base/java.lang=ALL-UNNAMED")
}

jacocoTestReport {
	executionData(test)
	reports {
		xml.required = true
		html.required = true
	}
}

spotless {
	java {
		target "src/**/*.java"
		palantirJavaFormat()
		indentWithTabs()
	}

	groovyGradle {
		indentWithTabs()
	}
}

application {
	mainClass = mainClassName
}

task placeholder(type: JavaExec) {
	group "application"
	args "placeholder"

	classpath = sourceSets.main.runtimeClasspath
	mainClass = mainClassName
}

task dataIndex(type: JavaExec) {
	group "application"
	args "data-index"

	classpath = sourceSets.main.runtimeClasspath
	mainClass = mainClassName
}

task scrapeMarketOrders(type: JavaExec) {
	group "application"
	args "scrape-market-orders"

	classpath = sourceSets.main.runtimeClasspath
	mainClass = mainClassName
}
