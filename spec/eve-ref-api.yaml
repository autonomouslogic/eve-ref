openapi: 3.0.1
info:
  description: This spec should be considered unstable and subject to change at any
    time.
  license:
    name: MIT-0
    url: https://github.com/autonomouslogic/eve-ref/blob/main/LICENSE
  title: EVE Ref API
  version: dev
servers:
- url: https://api.everef.net
paths:
  /v1/industry/cost:
    get:
      operationId: industryCost
      parameters:
      - explode: true
        in: query
        name: input
        schema:
          $ref: "#/components/schemas/IndustryCostInput"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IndustryCost"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Client error
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Server error
      tags:
      - industry
components:
  schemas:
    ActivityCost:
      type: object
      properties:
        materials:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/MaterialCost"
        product_type_id:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        time:
          type: string
    ApiError:
      type: object
      properties:
        message:
          type: string
    IndustryCost:
      type: object
      properties:
        copying:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/ActivityCost"
        input:
          $ref: "#/components/schemas/IndustryCostInput"
        invention:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/InventionCost"
        manufacturing:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/ActivityCost"
        me_research:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/ActivityCost"
        te_research:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/ActivityCost"
    IndustryCostInput:
      type: object
      properties:
        copying_rig_tech_level:
          type: string
          enum:
          - T1
          - T2
        decryptor_type_id:
          type: integer
          format: int64
        facility_tax_rate:
          type: number
        industry_skills:
          $ref: "#/components/schemas/IndustrySkills"
        invention_rig_tech_level:
          type: string
          enum:
          - T1
          - T2
        me_rig_tech_level:
          type: string
          enum:
          - T1
          - T2
        product_type_ids:
          type: array
          items:
            type: integer
            format: int64
          uniqueItems: true
        runs:
          type: integer
          format: int32
        security_class:
          type: string
          enum:
          - HIGH_SEC
          - LOW_SEC
          - NULL_SEC
          - WORMHOLE
        structure_type_id:
          type: integer
          format: int64
        system_cost_index:
          type: number
        system_id:
          type: integer
          format: int64
        te_rig_tech_level:
          type: string
          enum:
          - T1
          - T2
    IndustrySkills:
      type: object
      properties:
        advanced_industry:
          type: integer
          format: int32
        datacore1:
          type: integer
          format: int32
        datacore2:
          type: integer
          format: int32
        industry:
          type: integer
          format: int32
        metallurgy:
          type: integer
          format: int32
        research:
          type: integer
          format: int32
        science:
          type: integer
          format: int32
    InventionCost:
      type: object
      properties:
        materials:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/MaterialCost"
        me:
          type: integer
          format: int32
        probability:
          type: number
        product_type_id:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        runs:
          type: integer
          format: int32
        te:
          type: integer
          format: int32
        time:
          type: string
    MaterialCost:
      type: object
      properties:
        cost:
          type: number
        quantity:
          type: integer
          format: int64
        type_id:
          type: integer
          format: int64
