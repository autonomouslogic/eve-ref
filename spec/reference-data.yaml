openapi: 3.0.1
info:
  title: EVE Ref Reference Data for EVE Online
  description: This spec should be considered unstable and subject to change at any
    time.
  license:
    name: CCP
    url: https://github.com/autonomouslogic/eve-ref/blob/main/LICENSE-CCP
  version: dev
externalDocs:
  description: Reference data
  url: https://github.com/autonomouslogic/eve-ref/blob/main/docs/refdata.md
servers:
- url: https://ref-data.everef.net
  variables: {}
paths:
  /categories:
    get:
      tags:
      - refdata
      description: Get all category IDs.
      operationId: getAllCategories
      responses:
        "200":
          description: Category IDs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /categories/{category_id}:
    get:
      tags:
      - refdata
      operationId: getCategory
      parameters:
      - name: category_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The category.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryCategory'
  /dogma_attributes:
    get:
      tags:
      - refdata
      description: Get all dogma attribute IDs.
      operationId: getAllDogmaAttributes
      responses:
        "200":
          description: Dogma attribute IDs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /dogma_attributes/{attribute_id}:
    get:
      tags:
      - refdata
      operationId: getDogmaAttribute
      parameters:
      - name: attribute_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The dogma attribute.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DogmaAttribute'
  /groups:
    get:
      tags:
      - refdata
      description: Get all type IDs.
      operationId: getAllGroups
      responses:
        "200":
          description: Group IDs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /groups/{group_id}:
    get:
      tags:
      - refdata
      operationId: getGroup
      parameters:
      - name: group_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryGroup'
  /market_groups:
    get:
      tags:
      - refdata
      description: Get all market group IDs.
      operationId: getAllMarketGroups
      responses:
        "200":
          description: Market group IDs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /market_groups/{market_group_id}:
    get:
      tags:
      - refdata
      operationId: getMarketGroup
      parameters:
      - name: market_group_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The market group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketGroup'
  /meta_groups:
    get:
      tags:
      - refdata
      description: Get all meta group IDs.
      operationId: getAllMetaGroups
      responses:
        "200":
          description: Meta group IDs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /meta_groups/{meta_group_id}:
    get:
      tags:
      - refdata
      operationId: getMetaGroup
      parameters:
      - name: meta_group_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The meta group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaGroup'
  /mutaplasmids:
    get:
      tags:
      - refdata
      description: Get all mutaplasmid IDs.
      operationId: getAllMutaplasmids
      responses:
        "200":
          description: Mutaplasmid type IDs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /mutaplasmids/{mutaplasmid_type_id}:
    get:
      tags:
      - refdata
      operationId: getMutaplasmid
      parameters:
      - name: mutaplasmid_type_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The mutaplasmid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mutaplasmid'
  /skills:
    get:
      tags:
      - refdata
      description: Get all skill type IDs.
      operationId: getAllSkills
      responses:
        "200":
          description: Skill type IDs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /skills/{skill_type_id}:
    get:
      tags:
      - refdata
      operationId: getSkill
      parameters:
      - name: skill_type_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The skill.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
  /types:
    get:
      tags:
      - refdata
      description: Get all type IDs.
      operationId: getAllTypes
      responses:
        "200":
          description: Type IDs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /types/{type_id}:
    get:
      tags:
      - refdata
      operationId: getType
      parameters:
      - name: type_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryType'
components:
  schemas:
    DogmaAttribute:
      type: object
      properties:
        attribute_id:
          type: integer
          format: int32
        category_id:
          type: integer
          format: int32
        charge_recharge_time_id:
          type: integer
          format: int32
        data_type:
          type: integer
          format: int32
        default_value:
          type: number
          format: double
        description:
          type: object
          additionalProperties:
            type: string
        display_name:
          type: object
          additionalProperties:
            type: string
        display_when_zero:
          type: boolean
        high_is_good:
          type: boolean
        icon_id:
          type: integer
          format: int32
        max_attribute_id:
          type: integer
          format: int32
        name:
          type: string
        published:
          type: boolean
        stackable:
          type: boolean
        tooltip_description:
          type: object
          additionalProperties:
            type: string
        tooltip_title:
          type: object
          additionalProperties:
            type: string
        unit_id:
          type: integer
          format: int32
    DogmaTypeAttribute:
      type: object
      properties:
        attribute_id:
          type: integer
          format: int32
        value:
          type: number
          format: double
      description: A specific value for a dogma attribute
    DogmaTypeEffect:
      type: object
      properties:
        effect_id:
          type: integer
          format: int32
        is_default:
          type: boolean
      description: A specific value for a dogma effect.
    InventoryCategory:
      type: object
      properties:
        category_id:
          type: integer
          format: int64
        name:
          type: object
          additionalProperties:
            type: string
        published:
          type: boolean
        icon_id:
          type: integer
          format: int64
      description: An inventory category
    InventoryGroup:
      type: object
      properties:
        category_id:
          type: integer
          format: int64
        group_id:
          type: integer
          format: int64
        icon_id:
          type: integer
          format: int64
        name:
          type: object
          additionalProperties:
            type: string
        anchorable:
          type: boolean
        anchored:
          type: boolean
        fittable_non_singleton:
          type: boolean
        published:
          type: boolean
        use_base_price:
          type: boolean
      description: An inventory group
    InventoryType:
      type: object
      properties:
        base_price:
          type: number
        capacity:
          type: number
          format: double
        description:
          type: object
          additionalProperties:
            type: string
            description: The key is the language code.
          description: The key is the language code.
        dogma_attributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DogmaTypeAttribute'
          description: A map of dogma attributes. The key is the attribute ID
        dogma_effects:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DogmaTypeEffect'
          description: A map of dogma attributes. The key is the attribute ID
        faction_id:
          type: integer
          format: int32
        graphic_id:
          type: integer
          format: int32
        group_id:
          type: integer
          format: int32
        icon_id:
          type: integer
          format: int32
        market_group_id:
          type: integer
          format: int32
        mass:
          type: number
        masteries:
          type: object
          additionalProperties:
            type: array
            items:
              type: integer
              format: int32
        meta_group_id:
          type: integer
          format: int32
        name:
          type: object
          additionalProperties:
            type: string
            description: The key is the language code.
          description: The key is the language code.
        packaged_volume:
          type: number
          format: double
        portion_size:
          type: integer
          format: int32
        published:
          type: boolean
        race_id:
          type: integer
          format: int32
        radius:
          type: number
          format: double
        sof_faction_name:
          type: string
        sof_material_set_id:
          type: integer
          format: int32
        sound_id:
          type: integer
          format: int32
        traits:
          $ref: '#/components/schemas/InventoryTypeTraits'
        type_id:
          type: integer
          format: int32
        variation_parent_type_id:
          type: integer
          format: int32
        volume:
          type: number
        required_skills:
          type: object
          additionalProperties:
            type: integer
            description: The skills required for this type. The key is the skill type
              ID and the value is the level. This is added by EVE Ref and derived
              from dogma attributes.
            format: int32
          description: The skills required for this type. The key is the skill type
            ID and the value is the level. This is added by EVE Ref and derived from
            dogma attributes.
        applicable_mutaplasmid_type_ids:
          type: array
          description: Which mutaplasmids can be applied to this type to create a
            dynamic item. This is added by EVE Ref.
          items:
            type: integer
            description: Which mutaplasmids can be applied to this type to create
              a dynamic item. This is added by EVE Ref.
            format: int64
        creating_mutaplasmid_type_ids:
          type: array
          description: Which mutaplasmids can used to create this dynamic item. This
            is added by EVE Ref.
          items:
            type: integer
            description: Which mutaplasmids can used to create this dynamic item.
              This is added by EVE Ref.
            format: int64
        is_skill:
          type: boolean
          description: Whether this type is a skill or not. This is added by EVE Ref.
          default: false
        is_mutaplasmid:
          type: boolean
          description: Whether this type is a mutaplasmid or not. This is added by
            EVE Ref.
          default: false
        is_dynamic_item:
          type: boolean
          description: Whether this type is a dynamic item created by a mutaplasmid
            or not. This is added by EVE Ref.
          default: false
      description: An inventory type
    InventoryTypeTraits:
      type: object
      properties:
        misc_bonuses:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TraitBonus'
        role_bonuses:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TraitBonus'
        types:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              $ref: '#/components/schemas/TraitBonus'
        icon_id:
          type: integer
          format: int32
    MarketGroup:
      type: object
      properties:
        market_group_id:
          type: integer
          format: int64
        parent_group_id:
          type: integer
          format: int64
        name:
          type: object
          additionalProperties:
            type: string
        description:
          type: object
          additionalProperties:
            type: string
        icon_id:
          type: integer
          format: int64
        has_types:
          type: boolean
      description: A market group
    MetaGroup:
      type: object
      properties:
        meta_group_id:
          type: integer
          format: int64
        icon_id:
          type: integer
          format: int64
        icon_suffix:
          type: string
        name:
          type: object
          additionalProperties:
            type: string
        description:
          type: object
          additionalProperties:
            type: string
      description: A meta group
    Mutaplasmid:
      type: object
      properties:
        type_id:
          type: integer
          format: int64
        type_mappings:
          type: array
          items:
            $ref: '#/components/schemas/MutaplasmidTypeMapping'
        dogma_modifications:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MutaplasmidDogmaModifications'
          description: Which dogma attributes are modified by this mutaplasmid and
            by how much.
      description: Details about a mutaplasmid. These are created by EVE Ref and derived
        from Hoboleaks.
    MutaplasmidDogmaModifications:
      type: object
      properties:
        min:
          type: number
          format: double
        max:
          type: number
          format: double
      description: Details about how much a dogma attribute can be modified by a mutaplasmid.
        These are created by EVE Ref and derived from Hoboleaks.
    MutaplasmidTypeMapping:
      type: object
      properties:
        resulting_type_id:
          type: integer
          format: int64
        applicable_type_ids:
          type: array
          items:
            type: integer
            format: int64
      description: Details about which types a mutaplasmid can be applied to to create
        another type. These are created by EVE Ref and derived from Hoboleaks.
    Skill:
      type: object
      properties:
        type_id:
          type: integer
          format: int64
        primary_dogma_attribute_id:
          type: integer
          description: The dogma attribute ID of the primary training attribute.
          format: int64
        secondary_dogma_attribute_id:
          type: integer
          description: The dogma attribute ID of the secondary training attribute.
          format: int64
        primary_character_attribute_id:
          type: integer
          description: The character attribute ID of the primary training attribute.
          format: int64
        secondary_character_attribute_id:
          type: integer
          description: The character attribute ID of the secondary training attribute.
          format: int64
        training_time_multiplier:
          type: integer
          format: int32
        can_not_be_trained_on_trial:
          type: boolean
        required_skills:
          type: object
          additionalProperties:
            type: integer
            description: The other skills required for this skill.
            format: int32
          description: The other skills required for this skill.
      description: Details about skill types. These are created by EVE Ref.
    TraitBonus:
      type: object
      properties:
        bonus:
          type: number
          format: double
        bonus_text:
          type: object
          additionalProperties:
            type: string
            description: The key is the language code.
          description: The key is the language code.
        importance:
          type: integer
          format: int32
        is_positive:
          type: boolean
        unit_id:
          type: integer
          format: int32
