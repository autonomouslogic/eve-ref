openapi: 3.0.1
info:
  contact:
    name: Kenn
    url: https://everef.net/discord
  description: This spec should be considered unstable and subject to change at any
    time.
  license:
    name: CCP
    url: https://github.com/autonomouslogic/eve-ref/blob/main/LICENSE-CCP
  title: EVE Ref Reference Data for EVE Online
  version: dev
externalDocs:
  description: Reference data
  url: https://docs.everef.net/datasets/reference-data.html
servers:
- url: https://ref-data.everef.net
paths:
  /blueprints:
    get:
      description: Get all blueprint IDs.
      operationId: getAllBlueprints
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int64
          description: Blueprint type IDs.
      tags:
      - refdata
  /blueprints/{blueprint_type_id}:
    get:
      operationId: getBlueprint
      parameters:
      - in: path
        name: blueprint_type_id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Blueprint"
          description: The blueprint.
      tags:
      - refdata
  /categories:
    get:
      description: Get all category IDs.
      operationId: getAllCategories
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
          description: Category IDs.
      tags:
      - refdata
  /categories/bundle:
    get:
      operationId: getCategoriesBundle
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bundle"
          description: The categories bundle.
      tags:
      - refdata
  /categories/{category_id}:
    get:
      operationId: getCategory
      parameters:
      - in: path
        name: category_id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventoryCategory"
          description: The category.
      tags:
      - refdata
  /categories/{category_id}/bundle:
    get:
      operationId: getCategoryBundle
      parameters:
      - in: path
        name: category_id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bundle"
          description: The category bundle.
      tags:
      - refdata
  /dogma_attributes:
    get:
      description: Get all dogma attribute IDs.
      operationId: getAllDogmaAttributes
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
          description: Dogma attribute IDs.
      tags:
      - refdata
  /dogma_attributes/{attribute_id}:
    get:
      operationId: getDogmaAttribute
      parameters:
      - in: path
        name: attribute_id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DogmaAttribute"
          description: The dogma attribute.
      tags:
      - refdata
  /dogma_effects:
    get:
      description: Get all dogma effect IDs.
      operationId: getAllDogmaEffects
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
          description: Dogma effect IDs.
      tags:
      - refdata
  /dogma_effects/{effect_id}:
    get:
      operationId: getDogmaEffect
      parameters:
      - in: path
        name: effect_id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DogmaEffect"
          description: The dogma effect.
      tags:
      - refdata
  /groups:
    get:
      description: Get all type IDs.
      operationId: getAllGroups
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
          description: Group IDs.
      tags:
      - refdata
  /groups/{group_id}:
    get:
      operationId: getGroup
      parameters:
      - in: path
        name: group_id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventoryGroup"
          description: The group.
      tags:
      - refdata
  /groups/{group_id}/bundle:
    get:
      operationId: getGroupBundle
      parameters:
      - in: path
        name: group_id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bundle"
          description: The group bundle.
      tags:
      - refdata
  /icons:
    get:
      description: Get all icon IDs.
      operationId: getAllIcons
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
          description: Icon IDs.
      tags:
      - refdata
  /icons/{icon_id}:
    get:
      operationId: getIcon
      parameters:
      - in: path
        name: icon_id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Icon"
          description: The icon.
      tags:
      - refdata
  /market_groups:
    get:
      description: Get all market group IDs.
      operationId: getAllMarketGroups
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
          description: Market group IDs.
      tags:
      - refdata
  /market_groups/root:
    get:
      description: Get all root market group IDs.
      operationId: getRootMarketGroups
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
          description: Root market group IDs.
      tags:
      - refdata
  /market_groups/root/bundle:
    get:
      description: Get bundle for root market groups.
      operationId: getRootMarketGroupsBundle
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bundle"
          description: Root market group bundle.
      tags:
      - refdata
  /market_groups/{market_group_id}:
    get:
      operationId: getMarketGroup
      parameters:
      - in: path
        name: market_group_id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketGroup"
          description: The market group.
      tags:
      - refdata
  /market_groups/{market_group_id}/bundle:
    get:
      operationId: getMarketGroupBundle
      parameters:
      - in: path
        name: market_group_id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bundle"
          description: The market group bundle.
      tags:
      - refdata
  /meta:
    get:
      description: Get metadata about the API.
      operationId: getMeta
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RefDataMeta"
          description: The metadata.
      tags:
      - refdata
  /meta_groups:
    get:
      description: Get all meta group IDs.
      operationId: getAllMetaGroups
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
          description: Meta group IDs.
      tags:
      - refdata
  /meta_groups/{meta_group_id}:
    get:
      operationId: getMetaGroup
      parameters:
      - in: path
        name: meta_group_id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetaGroup"
          description: The meta group.
      tags:
      - refdata
  /mutaplasmids:
    get:
      description: Get all mutaplasmid IDs.
      operationId: getAllMutaplasmids
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
          description: Mutaplasmid type IDs.
      tags:
      - refdata
  /mutaplasmids/{mutaplasmid_type_id}:
    get:
      operationId: getMutaplasmid
      parameters:
      - in: path
        name: mutaplasmid_type_id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Mutaplasmid"
          description: The mutaplasmid.
      tags:
      - refdata
  /regions:
    get:
      description: Get all region IDs.
      operationId: getAllRegions
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
          description: Region IDs.
      tags:
      - refdata
  /regions/{region_id}:
    get:
      description: Get a region.
      operationId: getRegion
      parameters:
      - in: path
        name: region_id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Region"
          description: The region.
      tags:
      - refdata
  /schematics:
    get:
      description: Get all schematic IDs.
      operationId: getAllSchematics
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int64
          description: Schematic type IDs.
      tags:
      - refdata
  /schematics/{schematic_id}:
    get:
      operationId: getSchematic
      parameters:
      - in: path
        name: schematic_id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schematic"
          description: The schematic.
      tags:
      - refdata
  /skills:
    get:
      description: Get all skill type IDs.
      operationId: getAllSkills
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
          description: Skill type IDs.
      tags:
      - refdata
  /skills/{skill_type_id}:
    get:
      operationId: getSkill
      parameters:
      - in: path
        name: skill_type_id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Skill"
          description: The skill.
      tags:
      - refdata
  /types:
    get:
      description: Get all type IDs.
      operationId: getAllTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
          description: Type IDs.
      tags:
      - refdata
  /types/{type_id}:
    get:
      operationId: getType
      parameters:
      - in: path
        name: type_id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventoryType"
          description: The type.
      tags:
      - refdata
  /types/{type_id}/bundle:
    get:
      operationId: getTypeBundle
      parameters:
      - in: path
        name: type_id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bundle"
          description: The type bundle.
      tags:
      - refdata
  /units:
    get:
      description: Get all unit IDs.
      operationId: getAllUnits
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
          description: Unit type IDs.
      tags:
      - refdata
  /units/{unit_id}:
    get:
      operationId: getUnit
      parameters:
      - in: path
        name: unit_id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unit"
          description: The unit.
      tags:
      - refdata
components:
  schemas:
    Blueprint:
      type: object
      description: A map of blueprints. The key is the blueprint type ID.
      properties:
        activities:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/BlueprintActivity"
        blueprint_type_id:
          type: integer
          format: int64
        max_production_limit:
          type: integer
          format: int32
    BlueprintActivity:
      type: object
      properties:
        materials:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/BlueprintMaterial"
        products:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/BlueprintMaterial"
        required_skills:
          type: object
          additionalProperties:
            type: integer
            format: int32
        time:
          type: integer
          format: int64
    BlueprintMaterial:
      type: object
      properties:
        probability:
          type: number
          format: double
        quantity:
          type: integer
          format: int64
        type_id:
          type: integer
          format: int64
    Bundle:
      type: object
      properties:
        blueprints:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Blueprint"
          description: A map of blueprints. The key is the blueprint type ID.
        categories:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/InventoryCategory"
          description: A map of inventory categories. The key is the category ID.
        dogma_attributes:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/DogmaAttribute"
          description: A map of dogma attributes. The key is the attribute ID.
        groups:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/InventoryGroup"
          description: A map of inventory groups. The key is the group ID.
        icons:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Icon"
          description: A map of icons. The key is the icon ID.
        market_groups:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/MarketGroup"
          description: A map of market groups. The key is the market group ID.
        meta_groups:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/MetaGroup"
          description: A map of meta groups. The key is the group ID.
        skills:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Skill"
          description: A map of skills. The key is the skill ID.
        types:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/InventoryType"
          description: A map of types. The key is the type ID.
        units:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Unit"
          description: A map of units. The key is the unit ID.
    Coordinate:
      type: object
      properties:
        x:
          type: number
        "y":
          type: number
        z:
          type: number
    DogmaAttribute:
      type: object
      description: A map of dogma attributes. The key is the attribute ID.
      properties:
        attribute_id:
          type: integer
          format: int64
        category_id:
          type: integer
          format: int64
        charge_recharge_time_id:
          type: integer
          format: int32
        data_type:
          type: integer
          format: int32
        default_value:
          type: number
          format: double
        defined_on_type_ids:
          type: array
          items:
            type: integer
            format: int64
        description:
          type: object
          additionalProperties:
            type: string
        display_name:
          type: object
          additionalProperties:
            type: string
        display_when_zero:
          type: boolean
        high_is_good:
          type: boolean
        icon_id:
          type: integer
          format: int32
        max_attribute_id:
          type: integer
          format: int64
        min_attribute_id:
          type: integer
          format: int64
        name:
          type: string
        published:
          type: boolean
        stackable:
          type: boolean
        tooltip_description:
          type: object
          additionalProperties:
            type: string
        tooltip_title:
          type: object
          additionalProperties:
            type: string
        unit_id:
          type: integer
          format: int64
    DogmaEffect:
      type: object
      properties:
        defined_on_type_ids:
          type: array
          items:
            type: integer
            format: int64
        description:
          type: object
          additionalProperties:
            type: string
        disallow_auto_repeat:
          type: boolean
        discharge_attribute_id:
          type: integer
          format: int64
        display_name:
          type: object
          additionalProperties:
            type: string
        distribution:
          type: integer
          format: int32
        duration_attribute_id:
          type: integer
          format: int64
        effect_category:
          type: integer
          format: int32
        effect_id:
          type: integer
          format: int64
        effect_name:
          type: string
        electronic_chance:
          type: boolean
        falloff_attribute_id:
          type: integer
          format: int64
        fitting_usage_chance_attribute_id:
          type: integer
          format: int64
        guid:
          type: string
        icon_id:
          type: integer
          format: int64
        is_assistance:
          type: boolean
        is_offensive:
          type: boolean
        is_warp_safe:
          type: boolean
        modifiers:
          type: array
          items:
            $ref: "#/components/schemas/ModifierInfo"
        name:
          type: string
        npc_activation_chance_attribute_id:
          type: integer
          format: int64
        npc_usage_chance_attribute_id:
          type: integer
          format: int64
        propulsion_chance:
          type: boolean
        published:
          type: boolean
        range_attribute_id:
          type: integer
          format: int64
        range_chance:
          type: boolean
        resistance_attribute_id:
          type: integer
          format: int64
        sfx_name:
          type: string
        tracking_speed_attribute_id:
          type: integer
          format: int64
    DogmaTypeAttribute:
      type: object
      description: A specific value for a dogma attribute
      properties:
        attribute_id:
          type: integer
          format: int64
        value:
          type: number
          format: double
    DogmaTypeEffect:
      type: object
      description: A specific value for a dogma effect.
      properties:
        effect_id:
          type: integer
          format: int64
        is_default:
          type: boolean
    Icon:
      type: object
      description: A map of icons. The key is the icon ID.
      properties:
        description:
          type: string
        icon_file:
          type: string
        icon_id:
          type: integer
          format: int64
        obsolete:
          type: boolean
    InventoryCategory:
      type: object
      description: An inventory category
      properties:
        category_id:
          type: integer
          format: int64
        group_ids:
          type: array
          description: The group IDs in this category. This is added by EVE Ref.
          items:
            type: integer
            format: int64
            description: The group IDs in this category. This is added by EVE Ref.
        icon_id:
          type: integer
          format: int64
        name:
          type: object
          additionalProperties:
            type: string
        published:
          type: boolean
    InventoryGroup:
      type: object
      description: An inventory group
      properties:
        anchorable:
          type: boolean
        anchored:
          type: boolean
        category_id:
          type: integer
          format: int64
        fittable_non_singleton:
          type: boolean
        group_id:
          type: integer
          format: int64
        icon_id:
          type: integer
          format: int64
        name:
          type: object
          additionalProperties:
            type: string
        published:
          type: boolean
        type_ids:
          type: array
          description: The type IDs in this group. This is added by EVE Ref.
          items:
            type: integer
            format: int64
            description: The type IDs in this group. This is added by EVE Ref.
        use_base_price:
          type: boolean
    InventoryType:
      type: object
      description: An inventory type
      properties:
        applicable_mutaplasmid_type_ids:
          type: array
          description: Which mutaplasmids can be applied to this type to create a
            dynamic item. This is added by EVE Ref.
          items:
            type: integer
            format: int64
            description: Which mutaplasmids can be applied to this type to create
              a dynamic item. This is added by EVE Ref.
        base_price:
          type: number
        buildable_pin_type_ids:
          type: array
          description: The type IDs for the planetary pins which can be built on this
            planet. This is added by EVE Ref.
          items:
            type: integer
            format: int64
            description: The type IDs for the planetary pins which can be built on
              this planet. This is added by EVE Ref.
        can_be_fitted_with_types:
          type: array
          description: Types which can be fitted. This is added by EVE Ref.
          items:
            type: integer
            format: int64
            description: Types which can be fitted. This is added by EVE Ref.
        can_fit_types:
          type: array
          description: Types this can be fitted to. This is added by EVE Ref.
          items:
            type: integer
            format: int64
            description: Types this can be fitted to. This is added by EVE Ref.
        capacity:
          type: number
          format: double
        category_id:
          type: integer
          format: int64
          description: The category ID the group is in. This is added by EVE Ref.
        creating_mutaplasmid_type_ids:
          type: array
          description: Which mutaplasmids can used to create this dynamic item. This
            is added by EVE Ref.
          items:
            type: integer
            format: int64
            description: Which mutaplasmids can used to create this dynamic item.
              This is added by EVE Ref.
        description:
          type: object
          additionalProperties:
            type: string
            description: The key is the language code.
          description: The key is the language code.
        dogma_attributes:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/DogmaTypeAttribute"
          description: A map of dogma attributes. The key is the attribute ID
        dogma_effects:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/DogmaTypeEffect"
          description: A map of dogma attributes. The key is the attribute ID
        engineering_rig_affected_category_ids:
          type: array
          description: "For structure engineering rigs, these are the category IDs\
            \ the rig affects in some way. This is added by EVE Ref."
          items:
            type: integer
            format: int64
            description: "For structure engineering rigs, these are the category IDs\
              \ the rig affects in some way. This is added by EVE Ref."
        engineering_rig_affected_group_ids:
          type: array
          description: "For structure engineering rigs, these are the group IDs the\
            \ rig affects in some way. This is added by EVE Ref."
          items:
            type: integer
            format: int64
            description: "For structure engineering rigs, these are the group IDs\
              \ the rig affects in some way. This is added by EVE Ref."
        engineering_rig_source_type_ids:
          type: array
          description: These are the type IDs of the engineering rigs which affect
            this type in some way. This is added by EVE Ref.
          items:
            type: integer
            format: int64
            description: These are the type IDs of the engineering rigs which affect
              this type in some way. This is added by EVE Ref.
        faction_id:
          type: integer
          format: int64
        graphic_id:
          type: integer
          format: int64
        group_id:
          type: integer
          format: int64
        harvested_by_pin_type_ids:
          type: array
          description: The type IDs for the planetary extractor pins which can be
            used to harvest this type. This is added by EVE Ref.
          items:
            type: integer
            format: int64
            description: The type IDs for the planetary extractor pins which can be
              used to harvest this type. This is added by EVE Ref.
        icon_id:
          type: integer
          format: int64
        installable_schematic_ids:
          type: array
          description: The schematic IDs which can be installed into this planetary
            processor. This is added by EVE Ref.
          items:
            type: integer
            format: int64
            description: The schematic IDs which can be installed into this planetary
              processor. This is added by EVE Ref.
        is_blueprint:
          type: boolean
          default: false
          description: Whether this type is a blueprint or not. This is added by EVE
            Ref.
        is_dynamic_item:
          type: boolean
          default: false
          description: Whether this type is a dynamic item created by a mutaplasmid
            or not. This is added by EVE Ref.
        is_mutaplasmid:
          type: boolean
          default: false
          description: Whether this type is a mutaplasmid or not. This is added by
            EVE Ref.
        is_ore:
          type: boolean
          description: Whether this is an ore or not. This is added by EVE Ref.
        is_skill:
          type: boolean
          default: false
          description: Whether this type is a skill or not. This is added by EVE Ref.
        market_group_id:
          type: integer
          format: int64
        mass:
          type: number
        masteries:
          type: object
          additionalProperties:
            type: array
            items:
              type: integer
              format: int32
        meta_group_id:
          type: integer
          format: int64
        name:
          type: object
          additionalProperties:
            type: string
            description: The key is the language code.
          description: The key is the language code.
        ore_variations:
          type: object
          additionalProperties:
            type: array
            description: The variations for this ore type. The key is the asteroid
              meta level and the value is a list of type IDs. This is added by EVE
              Ref.
            items:
              type: integer
              format: int64
              description: The variations for this ore type. The key is the asteroid
                meta level and the value is a list of type IDs. This is added by EVE
                Ref.
          description: The variations for this ore type. The key is the asteroid meta
            level and the value is a list of type IDs. This is added by EVE Ref.
        packaged_volume:
          type: number
          format: double
        portion_size:
          type: integer
          format: int32
        produced_by_blueprints:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/ProducingBlueprint"
          description: The blueprints producing this type. The key is the blueprint
            type ID. This is added by EVE Ref.
        produced_by_schematic_ids:
          type: array
          description: The schematics producing this type. This is added by EVE Ref.
          items:
            type: integer
            format: int64
            description: The schematics producing this type. This is added by EVE
              Ref.
        published:
          type: boolean
        race_id:
          type: integer
          format: int64
        radius:
          type: number
          format: double
        required_skills:
          type: object
          additionalProperties:
            type: integer
            format: int32
            description: The skills required for this type. The key is the skill type
              ID and the value is the level. This is added by EVE Ref and derived
              from dogma attributes.
          description: The skills required for this type. The key is the skill type
            ID and the value is the level. This is added by EVE Ref and derived from
            dogma attributes.
        sof_faction_name:
          type: string
        sof_material_set_id:
          type: integer
          format: int64
        sound_id:
          type: integer
          format: int64
        traits:
          $ref: "#/components/schemas/InventoryTypeTraits"
        type_id:
          type: integer
          format: int64
        type_materials:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/TypeMaterial"
        type_variations:
          type: object
          additionalProperties:
            type: array
            description: The variations for this type. The key is the meta group and
              the value is a list of type IDs. This is added by EVE Ref.
            items:
              type: integer
              format: int64
              description: The variations for this type. The key is the meta group
                and the value is a list of type IDs. This is added by EVE Ref.
          description: The variations for this type. The key is the meta group and
            the value is a list of type IDs. This is added by EVE Ref.
        used_by_schematic_ids:
          type: array
          description: The schematics consuming this type. This is added by EVE Ref.
          items:
            type: integer
            format: int64
            description: The schematics consuming this type. This is added by EVE
              Ref.
        used_in_blueprints:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              $ref: "#/components/schemas/UsedInBlueprint"
            description: The blueprints in which this type is used. The first key
              is the blueprint ID and the second key is the activity name. This is
              added by EVE Ref.
          description: The blueprints in which this type is used. The first key is
            the blueprint ID and the second key is the activity name. This is added
            by EVE Ref.
        variation_parent_type_id:
          type: integer
          format: int64
        volume:
          type: number
    InventoryTypeTraits:
      type: object
      properties:
        icon_id:
          type: integer
          format: int64
        misc_bonuses:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/TraitBonus"
          description: "Misc bonuses indexed by 'importance' from the original array.\
            \ This is represented as an array in the SDE, but EVE Ref converts it\
            \ to a map."
        role_bonuses:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/TraitBonus"
          description: "Role bonuses indexed by 'importance' from the original array.\
            \ This is represented as an array in the SDE, but EVE Ref converts it\
            \ to a map."
        types:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              $ref: "#/components/schemas/TraitBonus"
            description: "Type traits. First key is type ID granting the bonus. Second\
              \ key is the `important` from the original array. This is represented\
              \ as an array in the SDE, but EVE Ref converts it to a map."
          description: "Type traits. First key is type ID granting the bonus. Second\
            \ key is the `important` from the original array. This is represented\
            \ as an array in the SDE, but EVE Ref converts it to a map."
    MarketGroup:
      type: object
      description: A market group
      properties:
        child_market_group_ids:
          type: array
          description: The market group IDs which are direct children of this group.
            This is added by EVE Ref.
          items:
            type: integer
            format: int64
            description: The market group IDs which are direct children of this group.
              This is added by EVE Ref.
        description:
          type: object
          additionalProperties:
            type: string
        has_types:
          type: boolean
        icon_id:
          type: integer
          format: int64
        market_group_id:
          type: integer
          format: int64
        name:
          type: object
          additionalProperties:
            type: string
        parent_group_id:
          type: integer
          format: int64
        type_ids:
          type: array
          description: The type IDs in this market group. This is added by EVE Ref.
          items:
            type: integer
            format: int64
            description: The type IDs in this market group. This is added by EVE Ref.
    MetaGroup:
      type: object
      description: A meta group
      properties:
        color:
          type: array
          items:
            type: number
            format: double
        description:
          type: object
          additionalProperties:
            type: string
        icon_id:
          type: integer
          format: int64
        icon_suffix:
          type: string
        meta_group_id:
          type: integer
          format: int64
        name:
          type: object
          additionalProperties:
            type: string
        type_ids:
          type: array
          description: The type IDs in this meta group. This is added by EVE Ref.
          items:
            type: integer
            format: int64
            description: The type IDs in this meta group. This is added by EVE Ref.
    ModifierInfo:
      type: object
      properties:
        domain:
          type: string
        effect_id:
          type: integer
          format: int64
        func:
          type: string
        group_id:
          type: integer
          format: int32
        modified_attribute_id:
          type: integer
          format: int64
        modifying_attribute_id:
          type: integer
          format: int64
        operator:
          type: integer
          format: int32
        skill_type_id:
          type: integer
          format: int64
    Mutaplasmid:
      type: object
      description: Details about a mutaplasmid. These are created by EVE Ref and derived
        from Hoboleaks.
      properties:
        dogma_modifications:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/MutaplasmidDogmaModifications"
          description: Which dogma attributes are modified by this mutaplasmid and
            by how much.
        type_id:
          type: integer
          format: int64
        type_mappings:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/MutaplasmidTypeMapping"
    MutaplasmidDogmaModifications:
      type: object
      description: Details about how much a dogma attribute can be modified by a mutaplasmid.
        These are created by EVE Ref and derived from Hoboleaks.
      properties:
        high_is_good:
          type: boolean
        max:
          type: number
          format: double
        min:
          type: number
          format: double
    MutaplasmidTypeMapping:
      type: object
      description: Details about which types a mutaplasmid can be applied to to create
        another type. These are created by EVE Ref and derived from Hoboleaks.
      properties:
        applicable_type_ids:
          type: array
          items:
            type: integer
            format: int64
        resulting_type_id:
          type: integer
          format: int64
    ProducingBlueprint:
      type: object
      description: The blueprints producing this type. The key is the blueprint type
        ID. This is added by EVE Ref.
      properties:
        blueprint_activity:
          type: string
        blueprint_type_id:
          type: integer
          format: int64
    RefDataMeta:
      type: object
      properties:
        build_time:
          type: string
          format: date-time
        esi:
          $ref: "#/components/schemas/RefDataMetaFileInfo"
        hoboleaks:
          $ref: "#/components/schemas/RefDataMetaFileInfo"
        sde:
          $ref: "#/components/schemas/RefDataMetaFileInfo"
    RefDataMetaFileInfo:
      type: object
      properties:
        sha256:
          type: string
    Region:
      type: object
      properties:
        center:
          $ref: "#/components/schemas/Coordinate"
        description:
          type: object
          additionalProperties:
            type: string
            description: The key is the language code.
          description: The key is the language code.
        description_id:
          type: integer
          format: int64
        faction_id:
          type: integer
          format: int64
        max:
          $ref: "#/components/schemas/Coordinate"
        min:
          $ref: "#/components/schemas/Coordinate"
        name:
          type: object
          additionalProperties:
            type: string
            description: The key is the language code.
          description: The key is the language code.
        name_id:
          type: integer
          format: int64
        nebula_id:
          type: integer
          format: int64
        region_id:
          type: integer
          format: int64
        universe_id:
          type: string
        wormhole_class_id:
          type: integer
          format: int64
    Schematic:
      type: object
      properties:
        cycle_time:
          type: integer
          format: int64
        materials:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/BlueprintMaterial"
          description: "This is called 'types' in the SDE, but EVE Ref converts it\
            \ to 'materials' and 'products' to be consistent with blueprints."
        name:
          type: object
          additionalProperties:
            type: string
        pin_type_ids:
          type: array
          items:
            type: integer
            format: int64
        products:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/BlueprintMaterial"
          description: "This is called 'types' in the SDE, but EVE Ref converts it\
            \ to 'materials' and 'products' to be consistent with blueprints."
        schematic_id:
          type: integer
          format: int64
    Skill:
      type: object
      description: Details about skill types. These are created entirely by EVE Ref.
      properties:
        can_not_be_trained_on_trial:
          type: boolean
        primary_character_attribute_id:
          type: integer
          format: int64
          description: The character attribute ID of the primary training attribute.
        primary_dogma_attribute_id:
          type: integer
          format: int64
          description: The dogma attribute ID of the primary training attribute.
        reprocessable_type_ids:
          type: array
          description: "Which type IDs this skill can be used to reprocess. This is\
            \ found by cross-referencing dogma attribute reprocessingSkillType [790]\
            \ on the skills."
          items:
            type: integer
            format: int64
            description: "Which type IDs this skill can be used to reprocess. This\
              \ is found by cross-referencing dogma attribute reprocessingSkillType\
              \ [790] on the skills."
        required_skills:
          type: object
          additionalProperties:
            type: integer
            format: int32
            description: The other skills required for this skill.
          description: The other skills required for this skill.
        secondary_character_attribute_id:
          type: integer
          format: int64
          description: The character attribute ID of the secondary training attribute.
        secondary_dogma_attribute_id:
          type: integer
          format: int64
          description: The dogma attribute ID of the secondary training attribute.
        training_time_multiplier:
          type: integer
          format: int32
        type_id:
          type: integer
          format: int64
    TraitBonus:
      type: object
      description: "Type traits. First key is type ID granting the bonus. Second key\
        \ is the `important` from the original array. This is represented as an array\
        \ in the SDE, but EVE Ref converts it to a map."
      properties:
        bonus:
          type: number
          format: double
        bonus_text:
          type: object
          additionalProperties:
            type: string
            description: The key is the language code.
          description: The key is the language code.
        importance:
          type: integer
          format: int32
        is_positive:
          type: boolean
        unit_id:
          type: integer
          format: int64
    TypeMaterial:
      type: object
      properties:
        material_type_id:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int64
    Unit:
      type: object
      properties:
        description:
          type: object
          additionalProperties:
            type: string
        display_name:
          type: string
        name:
          type: object
          additionalProperties:
            type: string
        unit_id:
          type: integer
          format: int64
    UsedInBlueprint:
      type: object
      description: Details a material used in a blueprint. This is added by EVE Ref.
      properties:
        activity:
          type: string
          description: The activity this material is used in.
        material_type_id:
          type: integer
          format: int64
          description: The material type ID.
        quantity:
          type: integer
          format: int64
          description: The quantity.
