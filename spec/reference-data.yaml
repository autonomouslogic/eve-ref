openapi: 3.0.1
info:
  title: EVE Ref Reference Data for EVE Online
  description: This spec should be considered unstable and subject to change at any
    time.
  license:
    name: CCP
    url: https://github.com/autonomouslogic/eve-ref/blob/main/LICENSE-CCP
  version: dev
externalDocs:
  description: Reference data
  url: https://github.com/autonomouslogic/eve-ref/blob/main/docs/refdata.md
servers:
- url: https://ref-data.everef.net
paths:
  /blueprints:
    get:
      tags:
      - refdata
      description: Get all blueprint IDs.
      operationId: getAllBlueprints
      responses:
        "200":
          description: Blueprint type IDs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int64
  /blueprints/{blueprint_type_id}:
    get:
      tags:
      - refdata
      operationId: getBlueprint
      parameters:
      - name: blueprint_type_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: The blueprint.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Blueprint"
  /categories:
    get:
      tags:
      - refdata
      description: Get all category IDs.
      operationId: getAllCategories
      responses:
        "200":
          description: Category IDs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /categories/{category_id}:
    get:
      tags:
      - refdata
      operationId: getCategory
      parameters:
      - name: category_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: The category.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventoryCategory"
  /dogma_attributes:
    get:
      tags:
      - refdata
      description: Get all dogma attribute IDs.
      operationId: getAllDogmaAttributes
      responses:
        "200":
          description: Dogma attribute IDs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /dogma_attributes/{attribute_id}:
    get:
      tags:
      - refdata
      operationId: getDogmaAttribute
      parameters:
      - name: attribute_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: The dogma attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DogmaAttribute"
  /dogma_effects:
    get:
      tags:
      - refdata
      description: Get all dogma effect IDs.
      operationId: getAllDogmaEffects
      responses:
        "200":
          description: Dogma effect IDs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /dogma_effects/{effect_id}:
    get:
      tags:
      - refdata
      operationId: getDogmaEffect
      parameters:
      - name: effect_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: The dogma effect.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DogmaEffect"
  /groups:
    get:
      tags:
      - refdata
      description: Get all type IDs.
      operationId: getAllGroups
      responses:
        "200":
          description: Group IDs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /groups/{group_id}:
    get:
      tags:
      - refdata
      operationId: getGroup
      parameters:
      - name: group_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: The group.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventoryGroup"
  /groups/{group_id}/bundle:
    get:
      tags:
      - refdata
      operationId: getGroupBundle
      parameters:
      - name: group_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: The group bundle.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bundle"
  /icons:
    get:
      tags:
      - refdata
      description: Get all icon IDs.
      operationId: getAllIcons
      responses:
        "200":
          description: Icon IDs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /icons/{icon_id}:
    get:
      tags:
      - refdata
      operationId: getIcon
      parameters:
      - name: icon_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: The icon.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Icon"
  /market_groups:
    get:
      tags:
      - refdata
      description: Get all market group IDs.
      operationId: getAllMarketGroups
      responses:
        "200":
          description: Market group IDs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /market_groups/root:
    get:
      tags:
      - refdata
      description: Get all root market group IDs.
      operationId: getRootMarketGroups
      responses:
        "200":
          description: Root market group IDs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /market_groups/{market_group_id}:
    get:
      tags:
      - refdata
      operationId: getMarketGroup
      parameters:
      - name: market_group_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: The market group.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketGroup"
  /meta:
    get:
      tags:
      - refdata
      description: Get metadata about the API.
      operationId: getMeta
      responses:
        "200":
          description: The metadata.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RefDataMeta"
  /meta_groups:
    get:
      tags:
      - refdata
      description: Get all meta group IDs.
      operationId: getAllMetaGroups
      responses:
        "200":
          description: Meta group IDs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /meta_groups/{meta_group_id}:
    get:
      tags:
      - refdata
      operationId: getMetaGroup
      parameters:
      - name: meta_group_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: The meta group.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetaGroup"
  /mutaplasmids:
    get:
      tags:
      - refdata
      description: Get all mutaplasmid IDs.
      operationId: getAllMutaplasmids
      responses:
        "200":
          description: Mutaplasmid type IDs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /mutaplasmids/{mutaplasmid_type_id}:
    get:
      tags:
      - refdata
      operationId: getMutaplasmid
      parameters:
      - name: mutaplasmid_type_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: The mutaplasmid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Mutaplasmid"
  /regions:
    get:
      tags:
      - refdata
      description: Get all region IDs.
      operationId: getAllRegions
      responses:
        "200":
          description: Region IDs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /regions/{region_id}:
    get:
      tags:
      - refdata
      description: Get a region.
      operationId: getRegion
      parameters:
      - name: region_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: The region.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Region"
  /schematics:
    get:
      tags:
      - refdata
      description: Get all schematic IDs.
      operationId: getAllSchematics
      responses:
        "200":
          description: Schematic type IDs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int64
  /schematics/{schematic_id}:
    get:
      tags:
      - refdata
      operationId: getSchematic
      parameters:
      - name: schematic_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: The schematic.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schematic"
  /skills:
    get:
      tags:
      - refdata
      description: Get all skill type IDs.
      operationId: getAllSkills
      responses:
        "200":
          description: Skill type IDs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /skills/{skill_type_id}:
    get:
      tags:
      - refdata
      operationId: getSkill
      parameters:
      - name: skill_type_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: The skill.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Skill"
  /types:
    get:
      tags:
      - refdata
      description: Get all type IDs.
      operationId: getAllTypes
      responses:
        "200":
          description: Type IDs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /types/{type_id}:
    get:
      tags:
      - refdata
      operationId: getType
      parameters:
      - name: type_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: The type.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventoryType"
  /types/{type_id}/bundle:
    get:
      tags:
      - refdata
      operationId: getTypeBundle
      parameters:
      - name: type_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: The type bundle.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bundle"
  /units:
    get:
      tags:
      - refdata
      description: Get all unit IDs.
      operationId: getAllUnits
      responses:
        "200":
          description: Unit type IDs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /units/{unit_id}:
    get:
      tags:
      - refdata
      operationId: getUnit
      parameters:
      - name: unit_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: The unit.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unit"
components:
  schemas:
    Blueprint:
      type: object
      properties:
        blueprint_type_id:
          type: integer
          format: int64
        activities:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/BlueprintActivity"
        max_production_limit:
          type: integer
          format: int32
    BlueprintActivity:
      type: object
      properties:
        time:
          type: integer
          format: int64
        materials:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/BlueprintMaterial"
        products:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/BlueprintMaterial"
        required_skills:
          type: object
          additionalProperties:
            type: integer
            format: int32
    BlueprintMaterial:
      type: object
      properties:
        type_id:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int64
        probability:
          type: number
          format: double
      description: "This is called 'types' in the SDE, but EVE Ref converts it to\
        \ 'materials' and 'products' to be consistent with blueprints."
    Bundle:
      type: object
      properties:
        types:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/InventoryType"
          description: A map of types. The key is the type ID.
        dogma_attributes:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/DogmaAttribute"
          description: A map of dogma attributes. The key is the attribute ID.
        skills:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Skill"
          description: A map of skills. The key is the skill ID.
        units:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Unit"
          description: A map of units. The key is the unit ID.
        icons:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Icon"
          description: A map of icons. The key is the icon ID.
        market_groups:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/MarketGroup"
          description: A map of market groups. The key is the market group ID.
        categories:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/InventoryCategory"
          description: A map of inventory categories. The key is the category ID.
        groups:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/InventoryGroup"
          description: A map of inventory groups. The key is the group ID.
    Coordinate:
      type: object
      properties:
        x:
          type: number
        "y":
          type: number
        z:
          type: number
    DogmaAttribute:
      type: object
      properties:
        attribute_id:
          type: integer
          format: int64
        category_id:
          type: integer
          format: int64
        charge_recharge_time_id:
          type: integer
          format: int32
        data_type:
          type: integer
          format: int32
        default_value:
          type: number
          format: double
        description:
          type: object
          additionalProperties:
            type: string
        display_name:
          type: object
          additionalProperties:
            type: string
        display_when_zero:
          type: boolean
        high_is_good:
          type: boolean
        icon_id:
          type: integer
          format: int32
        max_attribute_id:
          type: integer
          format: int64
        name:
          type: string
        published:
          type: boolean
        stackable:
          type: boolean
        tooltip_description:
          type: object
          additionalProperties:
            type: string
        tooltip_title:
          type: object
          additionalProperties:
            type: string
        unit_id:
          type: integer
          format: int64
      description: A map of dogma attributes. The key is the attribute ID.
    DogmaEffect:
      type: object
      properties:
        effect_id:
          type: integer
          format: int64
        name:
          type: string
        display_name:
          type: object
          additionalProperties:
            type: string
        description:
          type: object
          additionalProperties:
            type: string
        disallow_auto_repeat:
          type: boolean
        effect_category:
          type: integer
          format: int32
        effect_name:
          type: string
        electronic_chance:
          type: boolean
        guid:
          type: string
        discharge_attribute_id:
          type: integer
          format: int64
        duration_attribute_id:
          type: integer
          format: int64
        falloff_attribute_id:
          type: integer
          format: int64
        range_attribute_id:
          type: integer
          format: int64
        npc_usage_chance_attribute_id:
          type: integer
          format: int64
        tracking_speed_attribute_id:
          type: integer
          format: int64
        npc_activation_chance_attribute_id:
          type: integer
          format: int64
        fitting_usage_chance_attribute_id:
          type: integer
          format: int64
        resistance_attribute_id:
          type: integer
          format: int64
        distribution:
          type: integer
          format: int32
        icon_id:
          type: integer
          format: int64
        is_assistance:
          type: boolean
        is_offensive:
          type: boolean
        is_warp_safe:
          type: boolean
        propulsion_chance:
          type: boolean
        published:
          type: boolean
        range_chance:
          type: boolean
        sfx_name:
          type: string
        modifiers:
          type: array
          items:
            $ref: "#/components/schemas/ModifierInfo"
    DogmaTypeAttribute:
      type: object
      properties:
        attribute_id:
          type: integer
          format: int64
        value:
          type: number
          format: double
      description: A specific value for a dogma attribute
    DogmaTypeEffect:
      type: object
      properties:
        effect_id:
          type: integer
          format: int64
        is_default:
          type: boolean
      description: A specific value for a dogma effect.
    Icon:
      type: object
      properties:
        icon_id:
          type: integer
          format: int64
        description:
          type: string
        icon_file:
          type: string
        obsolete:
          type: boolean
      description: A map of icons. The key is the icon ID.
    InventoryCategory:
      type: object
      properties:
        category_id:
          type: integer
          format: int64
        name:
          type: object
          additionalProperties:
            type: string
        published:
          type: boolean
        icon_id:
          type: integer
          format: int64
        group_ids:
          type: array
          description: The group IDs in this category. This is added by EVE Ref.
          items:
            type: integer
            description: The group IDs in this category. This is added by EVE Ref.
            format: int64
      description: An inventory category
    InventoryGroup:
      type: object
      properties:
        group_id:
          type: integer
          format: int64
        category_id:
          type: integer
          format: int64
        icon_id:
          type: integer
          format: int64
        name:
          type: object
          additionalProperties:
            type: string
        anchorable:
          type: boolean
        anchored:
          type: boolean
        fittable_non_singleton:
          type: boolean
        published:
          type: boolean
        use_base_price:
          type: boolean
        type_ids:
          type: array
          description: The type IDs in this group. This is added by EVE Ref.
          items:
            type: integer
            description: The type IDs in this group. This is added by EVE Ref.
            format: int64
      description: An inventory group
    InventoryType:
      type: object
      properties:
        type_id:
          type: integer
          format: int64
        base_price:
          type: number
        capacity:
          type: number
          format: double
        description:
          type: object
          additionalProperties:
            type: string
            description: The key is the language code.
          description: The key is the language code.
        dogma_attributes:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/DogmaTypeAttribute"
          description: A map of dogma attributes. The key is the attribute ID
        dogma_effects:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/DogmaTypeEffect"
          description: A map of dogma attributes. The key is the attribute ID
        faction_id:
          type: integer
          format: int64
        graphic_id:
          type: integer
          format: int64
        group_id:
          type: integer
          format: int64
        icon_id:
          type: integer
          format: int64
        market_group_id:
          type: integer
          format: int64
        mass:
          type: number
        masteries:
          type: object
          additionalProperties:
            type: array
            items:
              type: integer
              format: int32
        meta_group_id:
          type: integer
          format: int64
        name:
          type: object
          additionalProperties:
            type: string
            description: The key is the language code.
          description: The key is the language code.
        packaged_volume:
          type: number
          format: double
        portion_size:
          type: integer
          format: int32
        published:
          type: boolean
        race_id:
          type: integer
          format: int64
        radius:
          type: number
          format: double
        sof_faction_name:
          type: string
        sof_material_set_id:
          type: integer
          format: int64
        sound_id:
          type: integer
          format: int64
        traits:
          $ref: "#/components/schemas/InventoryTypeTraits"
        variation_parent_type_id:
          type: integer
          format: int64
        volume:
          type: number
        required_skills:
          type: object
          additionalProperties:
            type: integer
            description: The skills required for this type. The key is the skill type
              ID and the value is the level. This is added by EVE Ref and derived
              from dogma attributes.
            format: int32
          description: The skills required for this type. The key is the skill type
            ID and the value is the level. This is added by EVE Ref and derived from
            dogma attributes.
        applicable_mutaplasmid_type_ids:
          type: array
          description: Which mutaplasmids can be applied to this type to create a
            dynamic item. This is added by EVE Ref.
          items:
            type: integer
            description: Which mutaplasmids can be applied to this type to create
              a dynamic item. This is added by EVE Ref.
            format: int64
        creating_mutaplasmid_type_ids:
          type: array
          description: Which mutaplasmids can used to create this dynamic item. This
            is added by EVE Ref.
          items:
            type: integer
            description: Which mutaplasmids can used to create this dynamic item.
              This is added by EVE Ref.
            format: int64
        type_variations:
          type: object
          additionalProperties:
            type: array
            description: The variations for this type. The key is the meta group and
              the value is a list of type IDs. This is added by EVE Ref.
            items:
              type: integer
              description: The variations for this type. The key is the meta group
                and the value is a list of type IDs. This is added by EVE Ref.
              format: int64
          description: The variations for this type. The key is the meta group and
            the value is a list of type IDs. This is added by EVE Ref.
        ore_variations:
          type: object
          additionalProperties:
            type: array
            description: The variations for this ore type. The key is the asteroid
              meta level and the value is a list of type IDs. This is added by EVE
              Ref.
            items:
              type: integer
              description: The variations for this ore type. The key is the asteroid
                meta level and the value is a list of type IDs. This is added by EVE
                Ref.
              format: int64
          description: The variations for this ore type. The key is the asteroid meta
            level and the value is a list of type IDs. This is added by EVE Ref.
        is_ore:
          type: boolean
          description: Whether this is an ore or not. This is added by EVE Ref.
        produced_by_blueprints:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/ProducingBlueprint"
          description: The blueprints producing this type. The key is the blueprint
            type ID. This is added by EVE Ref.
        type_materials:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/TypeMaterial"
        can_fit_types:
          type: array
          description: Types this can be fitted to. This is added by EVE Ref.
          items:
            type: integer
            description: Types this can be fitted to. This is added by EVE Ref.
            format: int64
        can_be_fitted_with_types:
          type: array
          description: Types which can be fitted. This is added by EVE Ref.
          items:
            type: integer
            description: Types which can be fitted. This is added by EVE Ref.
            format: int64
        used_by_schematic_ids:
          type: array
          description: The schematics consuming this type. This is added by EVE Ref.
          items:
            type: integer
            description: The schematics consuming this type. This is added by EVE
              Ref.
            format: int64
        produced_by_schematic_ids:
          type: array
          description: The schematics producing this type. This is added by EVE Ref.
          items:
            type: integer
            description: The schematics producing this type. This is added by EVE
              Ref.
            format: int64
        harvested_by_pin_type_ids:
          type: array
          description: The type IDs for the planetary extractor pins which can be
            used to harvest this type. This is added by EVE Ref.
          items:
            type: integer
            description: The type IDs for the planetary extractor pins which can be
              used to harvest this type. This is added by EVE Ref.
            format: int64
        buildable_pin_type_ids:
          type: array
          description: The type IDs for the planetary pins which can be built on this
            planet. This is added by EVE Ref.
          items:
            type: integer
            description: The type IDs for the planetary pins which can be built on
              this planet. This is added by EVE Ref.
            format: int64
        installable_schematic_ids:
          type: array
          description: The schematic IDs which can be installed into this planetary
            processor. This is added by EVE Ref.
          items:
            type: integer
            description: The schematic IDs which can be installed into this planetary
              processor. This is added by EVE Ref.
            format: int64
        is_skill:
          type: boolean
          description: Whether this type is a skill or not. This is added by EVE Ref.
          default: false
        is_mutaplasmid:
          type: boolean
          description: Whether this type is a mutaplasmid or not. This is added by
            EVE Ref.
          default: false
        is_dynamic_item:
          type: boolean
          description: Whether this type is a dynamic item created by a mutaplasmid
            or not. This is added by EVE Ref.
          default: false
        is_blueprint:
          type: boolean
          description: Whether this type is a blueprint or not. This is added by EVE
            Ref.
          default: false
      description: An inventory type
    InventoryTypeTraits:
      type: object
      properties:
        misc_bonuses:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/TraitBonus"
        role_bonuses:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/TraitBonus"
        types:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              $ref: "#/components/schemas/TraitBonus"
        icon_id:
          type: integer
          format: int64
    MarketGroup:
      type: object
      properties:
        market_group_id:
          type: integer
          format: int64
        parent_group_id:
          type: integer
          format: int64
        name:
          type: object
          additionalProperties:
            type: string
        description:
          type: object
          additionalProperties:
            type: string
        icon_id:
          type: integer
          format: int64
        has_types:
          type: boolean
        child_market_group_ids:
          type: array
          description: The market group IDs which are direct children of this group.
            This is added by EVE Ref.
          items:
            type: integer
            description: The market group IDs which are direct children of this group.
              This is added by EVE Ref.
            format: int64
        type_ids:
          type: array
          description: The type IDs in this market group. This is added by EVE Ref.
          items:
            type: integer
            description: The type IDs in this market group. This is added by EVE Ref.
            format: int64
      description: A market group
    MetaGroup:
      type: object
      properties:
        meta_group_id:
          type: integer
          format: int64
        icon_id:
          type: integer
          format: int64
        icon_suffix:
          type: string
        name:
          type: object
          additionalProperties:
            type: string
        description:
          type: object
          additionalProperties:
            type: string
      description: A meta group
    ModifierInfo:
      type: object
      properties:
        domain:
          type: string
        func:
          type: string
        group_id:
          type: integer
          format: int32
        modified_attribute_id:
          type: integer
          format: int64
        modifying_attribute_id:
          type: integer
          format: int64
        skill_type_id:
          type: integer
          format: int64
        effect_id:
          type: integer
          format: int64
        operator:
          type: integer
          format: int32
    Mutaplasmid:
      type: object
      properties:
        type_id:
          type: integer
          format: int64
        type_mappings:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/MutaplasmidTypeMapping"
        dogma_modifications:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/MutaplasmidDogmaModifications"
          description: Which dogma attributes are modified by this mutaplasmid and
            by how much.
      description: Details about a mutaplasmid. These are created by EVE Ref and derived
        from Hoboleaks.
    MutaplasmidDogmaModifications:
      type: object
      properties:
        min:
          type: number
          format: double
        max:
          type: number
          format: double
        high_is_good:
          type: boolean
      description: Details about how much a dogma attribute can be modified by a mutaplasmid.
        These are created by EVE Ref and derived from Hoboleaks.
    MutaplasmidTypeMapping:
      type: object
      properties:
        resulting_type_id:
          type: integer
          format: int64
        applicable_type_ids:
          type: array
          items:
            type: integer
            format: int64
      description: Details about which types a mutaplasmid can be applied to to create
        another type. These are created by EVE Ref and derived from Hoboleaks.
    ProducingBlueprint:
      type: object
      properties:
        blueprint_type_id:
          type: integer
          format: int64
        blueprint_activity:
          type: string
      description: The blueprints producing this type. The key is the blueprint type
        ID. This is added by EVE Ref.
    RefDataMeta:
      type: object
      properties:
        build_time:
          type: string
          format: date-time
        esi:
          $ref: "#/components/schemas/RefDataMetaFileInfo"
        sde:
          $ref: "#/components/schemas/RefDataMetaFileInfo"
        hoboleaks:
          $ref: "#/components/schemas/RefDataMetaFileInfo"
    RefDataMetaFileInfo:
      type: object
      properties:
        sha256:
          type: string
    Region:
      type: object
      properties:
        region_id:
          type: integer
          format: int64
        universe_id:
          type: string
        wormhole_class_id:
          type: integer
          format: int64
        nebula_id:
          type: integer
          format: int64
        name_id:
          type: integer
          format: int64
        description_id:
          type: integer
          format: int64
        faction_id:
          type: integer
          format: int64
        name:
          type: object
          additionalProperties:
            type: string
            description: The key is the language code.
          description: The key is the language code.
        description:
          type: object
          additionalProperties:
            type: string
            description: The key is the language code.
          description: The key is the language code.
        center:
          $ref: "#/components/schemas/Coordinate"
        max:
          $ref: "#/components/schemas/Coordinate"
        min:
          $ref: "#/components/schemas/Coordinate"
    Schematic:
      type: object
      properties:
        schematic_id:
          type: integer
          format: int64
        name:
          type: object
          additionalProperties:
            type: string
        cycle_time:
          type: integer
          format: int64
        materials:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/BlueprintMaterial"
          description: "This is called 'types' in the SDE, but EVE Ref converts it\
            \ to 'materials' and 'products' to be consistent with blueprints."
        products:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/BlueprintMaterial"
          description: "This is called 'types' in the SDE, but EVE Ref converts it\
            \ to 'materials' and 'products' to be consistent with blueprints."
        pin_type_ids:
          type: array
          items:
            type: integer
            format: int64
    Skill:
      type: object
      properties:
        type_id:
          type: integer
          format: int64
        primary_dogma_attribute_id:
          type: integer
          description: The dogma attribute ID of the primary training attribute.
          format: int64
        secondary_dogma_attribute_id:
          type: integer
          description: The dogma attribute ID of the secondary training attribute.
          format: int64
        primary_character_attribute_id:
          type: integer
          description: The character attribute ID of the primary training attribute.
          format: int64
        secondary_character_attribute_id:
          type: integer
          description: The character attribute ID of the secondary training attribute.
          format: int64
        training_time_multiplier:
          type: integer
          format: int32
        can_not_be_trained_on_trial:
          type: boolean
        required_skills:
          type: object
          additionalProperties:
            type: integer
            description: The other skills required for this skill.
            format: int32
          description: The other skills required for this skill.
        reprocessable_type_ids:
          type: array
          description: "Which type IDs this skill can be used to reprocess. This is\
            \ found by cross-referencing dogma attribute reprocessingSkillType [790]\
            \ on the skills."
          items:
            type: integer
            description: "Which type IDs this skill can be used to reprocess. This\
              \ is found by cross-referencing dogma attribute reprocessingSkillType\
              \ [790] on the skills."
            format: int64
      description: Details about skill types. These are created entirely by EVE Ref.
    TraitBonus:
      type: object
      properties:
        bonus:
          type: number
          format: double
        bonus_text:
          type: object
          additionalProperties:
            type: string
            description: The key is the language code.
          description: The key is the language code.
        importance:
          type: integer
          format: int32
        is_positive:
          type: boolean
        unit_id:
          type: integer
          format: int64
    TypeMaterial:
      type: object
      properties:
        material_type_id:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int64
    Unit:
      type: object
      properties:
        unit_id:
          type: integer
          format: int64
        display_name:
          type: string
        name:
          type: object
          additionalProperties:
            type: string
        description:
          type: object
          additionalProperties:
            type: string
